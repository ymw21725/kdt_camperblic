{"ast":null,"code":"import React from'react';import'../../../../styles/adminStyles/admindashboard/AdminDashboardboardLayout.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AdminDashboardBoardLayout=function AdminDashboardBoardLayout(_ref){var postings=_ref.postings;var formatDate=function formatDate(dateStr){var date=new Date(dateStr);var year=date.getFullYear();var month=String(date.getMonth()+1).padStart(2,'0');var day=String(date.getDate()).padStart(2,'0');var hours=String(date.getHours()).padStart(2,'0');var minutes=String(date.getMinutes()).padStart(2,'0');var seconds=String(date.getSeconds()).padStart(2,'0');return\"\".concat(year,\"-\").concat(month,\"-\").concat(day,\"-\").concat(hours,\":\").concat(minutes,\":\").concat(seconds);};return/*#__PURE__*/_jsx(\"div\",{className:\"admin-dashboard-board-layout\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uAE00\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC77C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:postings.map(function(posting){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:posting.title}),/*#__PURE__*/_jsx(\"td\",{children:posting.name}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(posting.createdate)})]},posting.id);})})]})});};export default AdminDashboardBoardLayout;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","AdminDashboardBoardLayout","_ref","postings","formatDate","dateStr","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","concat","className","children","map","posting","title","name","createdate","id"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/admin/components/admindashboard/AdminDashboardBoardLayout.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Posting} from \"../../../../types\";\r\nimport '../../../../styles/adminStyles/admindashboard/AdminDashboardboardLayout.css';\r\n\r\ninterface BoardLayOutProps {\r\n    postings: Posting[];\r\n}\r\n\r\nconst AdminDashboardBoardLayout:React.FC<BoardLayOutProps> = ({postings}) => {\r\n\r\n    const formatDate = (dateStr:any) => {\r\n        const date = new Date(dateStr);\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n        return `${year}-${month}-${day}-${hours}:${minutes}:${seconds}`;\r\n    };\r\n\r\n    return (\r\n        <div className='admin-dashboard-board-layout'>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>글제목</th>\r\n                    <th>작성자</th>\r\n                    <th>작성일</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {postings.map((posting) => (\r\n                    <tr key={posting.id}>\r\n                        <td>{posting.title}</td>\r\n                        <td>{posting.name}</td>\r\n                        <td>{formatDate(posting.createdate)}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboardBoardLayout;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,6EAA6E,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAMrF,GAAM,CAAAC,yBAAoD,CAAG,QAAvD,CAAAA,yBAAoDA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAEnE,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,OAAW,CAAK,CAChC,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,OAAO,CAAC,CAC9B,GAAM,CAAAG,IAAI,CAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAC/B,GAAM,CAAAC,KAAK,CAAGC,MAAM,CAACL,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC1D,GAAM,CAAAC,GAAG,CAAGH,MAAM,CAACL,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACnD,GAAM,CAAAG,KAAK,CAAGL,MAAM,CAACL,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACtD,GAAM,CAAAK,OAAO,CAAGP,MAAM,CAACL,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC1D,GAAM,CAAAO,OAAO,CAAGT,MAAM,CAACL,IAAI,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAE1D,SAAAS,MAAA,CAAUd,IAAI,MAAAc,MAAA,CAAIZ,KAAK,MAAAY,MAAA,CAAIR,GAAG,MAAAQ,MAAA,CAAIN,KAAK,MAAAM,MAAA,CAAIJ,OAAO,MAAAI,MAAA,CAAIF,OAAO,EACjE,CAAC,CAED,mBACItB,IAAA,QAAKyB,SAAS,CAAC,8BAA8B,CAAAC,QAAA,cACzCxB,KAAA,UAAAwB,QAAA,eACI1B,IAAA,UAAA0B,QAAA,cACAxB,KAAA,OAAAwB,QAAA,eACI1B,IAAA,OAAA0B,QAAA,CAAI,oBAAG,CAAI,CAAC,cACZ1B,IAAA,OAAA0B,QAAA,CAAI,oBAAG,CAAI,CAAC,cACZ1B,IAAA,OAAA0B,QAAA,CAAI,oBAAG,CAAI,CAAC,EACZ,CAAC,CACE,CAAC,cACR1B,IAAA,UAAA0B,QAAA,CACCrB,QAAQ,CAACsB,GAAG,CAAC,SAACC,OAAO,qBAClB1B,KAAA,OAAAwB,QAAA,eACI1B,IAAA,OAAA0B,QAAA,CAAKE,OAAO,CAACC,KAAK,CAAK,CAAC,cACxB7B,IAAA,OAAA0B,QAAA,CAAKE,OAAO,CAACE,IAAI,CAAK,CAAC,cACvB9B,IAAA,OAAA0B,QAAA,CAAKpB,UAAU,CAACsB,OAAO,CAACG,UAAU,CAAC,CAAK,CAAC,GAHpCH,OAAO,CAACI,EAIb,CAAC,EACR,CAAC,CACK,CAAC,EACL,CAAC,CACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAA7B,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}