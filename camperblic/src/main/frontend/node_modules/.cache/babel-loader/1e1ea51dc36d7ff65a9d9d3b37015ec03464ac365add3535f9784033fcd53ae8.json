{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/admin/components/admindashboard/AdminDashboardGraph.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Barchart from './Barchart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboardGraph = () => {\n  _s();\n  const [graphData, setGraphData] = useState([]);\n  const [graphDTO, setGraphDTO] = useState(null);\n  useEffect(() => {\n    axios.get('/admindashboard/admindashboardchart').then(response => {\n      const data = response.data;\n\n      // 데이터 형식 변환\n      const formattedData = data.map(_ref => {\n        let [date, value] = _ref;\n        return {\n          date,\n          value\n        };\n      });\n      setGraphData(formattedData);\n\n      // 날짜별 매출액 계산\n      const currentDate = new Date().toISOString().slice(0, 10);\n      const filteredData = {\n        fourTotalPrice: 0,\n        threeTotalPrice: 0,\n        twoTotalPrice: 0,\n        oneTotalPrice: 0,\n        currTotalPrice: 0,\n        totalPriceSum: 0\n      };\n      formattedData.forEach(_ref2 => {\n        let {\n          date,\n          value\n        } = _ref2;\n        const daysAgo = Math.floor((new Date(currentDate).getTime() - new Date(date).getTime()) / (24 * 60 * 60 * 1000));\n        if (daysAgo === 4) {\n          filteredData.fourTotalPrice += value;\n        } else if (daysAgo === 3) {\n          filteredData.threeTotalPrice += value;\n        } else if (daysAgo === 2) {\n          filteredData.twoTotalPrice += value;\n        } else if (daysAgo === 1) {\n          filteredData.oneTotalPrice += value;\n        } else if (daysAgo === 0) {\n          filteredData.currTotalPrice += value;\n        }\n      });\n\n      // 현재월 총합 계산\n      filteredData.totalPriceSum = formattedData.reduce((sum, _ref3) => {\n        let {\n          value\n        } = _ref3;\n        return sum + value;\n      }, 0);\n      setGraphDTO(filteredData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: graphDTO ? /*#__PURE__*/_jsxDEV(Barchart, {\n      graphDTO: graphDTO\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading graph data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboardGraph, \"t6vhn537HrL045FzdsmDaNKuOtg=\");\n_c = AdminDashboardGraph;\nexport default AdminDashboardGraph;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboardGraph\");","map":{"version":3,"names":["React","useEffect","useState","axios","Barchart","jsxDEV","_jsxDEV","AdminDashboardGraph","_s","graphData","setGraphData","graphDTO","setGraphDTO","get","then","response","data","formattedData","map","_ref","date","value","currentDate","Date","toISOString","slice","filteredData","fourTotalPrice","threeTotalPrice","twoTotalPrice","oneTotalPrice","currTotalPrice","totalPriceSum","forEach","_ref2","daysAgo","Math","floor","getTime","reduce","sum","_ref3","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/admin/components/admindashboard/AdminDashboardGraph.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Barchart from './Barchart';\nimport { GraphDTO } from '../../../../types';\n\ninterface GraphDataItem {\n    date: string;\n    value: number;\n}\n\nconst AdminDashboardGraph = () => {\n    const [graphData, setGraphData] = useState<GraphDataItem[]>([]);\n    const [graphDTO, setGraphDTO] = useState<GraphDTO | null>(null);\n\n    useEffect(() => {\n        axios\n            .get('/admindashboard/admindashboardchart')\n            .then((response) => {\n                const data: [string, number][] = response.data;\n\n                // 데이터 형식 변환\n                const formattedData: GraphDataItem[] = data.map(([date, value]) => ({\n                    date,\n                    value,\n                }));\n\n                setGraphData(formattedData);\n\n                // 날짜별 매출액 계산\n                const currentDate = new Date().toISOString().slice(0, 10);\n                const filteredData: GraphDTO = {\n                    fourTotalPrice: 0,\n                    threeTotalPrice: 0,\n                    twoTotalPrice: 0,\n                    oneTotalPrice: 0,\n                    currTotalPrice: 0,\n                    totalPriceSum: 0,\n                };\n\n                formattedData.forEach(({ date, value }) => {\n                    const daysAgo = Math.floor(\n                        (new Date(currentDate).getTime() - new Date(date).getTime()) /\n                        (24 * 60 * 60 * 1000)\n                    );\n                    if (daysAgo === 4) {\n                        filteredData.fourTotalPrice += value;\n                    } else if (daysAgo === 3) {\n                        filteredData.threeTotalPrice += value;\n                    } else if (daysAgo === 2) {\n                        filteredData.twoTotalPrice += value;\n                    } else if (daysAgo === 1) {\n                        filteredData.oneTotalPrice += value;\n                    } else if (daysAgo === 0) {\n                        filteredData.currTotalPrice += value;\n                    }\n                });\n\n                // 현재월 총합 계산\n                filteredData.totalPriceSum = formattedData.reduce(\n                    (sum, { value }) => sum + value,\n                    0\n                );\n\n                setGraphDTO(filteredData);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <section>\n            {graphDTO ? (\n                <Barchart graphDTO={graphDTO} />\n            ) : (\n                <p>Loading graph data...</p>\n            )}\n        </section>\n    );\n};\n\nexport default AdminDashboardGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}