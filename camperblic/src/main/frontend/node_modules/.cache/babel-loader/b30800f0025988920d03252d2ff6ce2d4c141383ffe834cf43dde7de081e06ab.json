{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/item/ItemAll.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport ItemLayOut from \"./ItemLayOut\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemAll = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 상태 추가\n\n  const fetchItems = async page => {\n    setIsLoading(true);\n    try {\n      const [cookResponse, etcResponse, matResponse, chairResponse, tentResponse] = await Promise.all([axios.get(`/cook?page=${page}`), axios.get(`/etc?page=${page}`), axios.get(`/mat?page=${page}`), axios.get(`/chair?page=${page}`), axios.get(`/tent?page=${page}`)]);\n      const nextPageItems = [...cookResponse.data, ...etcResponse.data, ...matResponse.data, ...chairResponse.data, ...tentResponse.data];\n      setItems(prevItems => [...prevItems, ...nextPageItems]);\n    } catch (error) {\n      console.error('상품 가져오기 실패:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadMoreItems = () => {\n    const nextPage = currentPage + 1; // 다음 페이지 계산\n    fetchItems(nextPage);\n    setCurrentPage(nextPage); // 현재 페이지 업데이트\n  };\n\n  useEffect(() => {\n    fetchItems(1);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ItemLayOut, {\n    items: items,\n    topText: \"\\uC804\\uCCB4\\uC0C1\\uD488\",\n    onLoadMore: loadMoreItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ItemAll, \"FHaY89AeaT5lmlNQLrrKkEuQ4X4=\");\n_c = ItemAll;\nexport default ItemAll;\nvar _c;\n$RefreshReg$(_c, \"ItemAll\");","map":{"version":3,"names":["React","useEffect","useState","axios","ItemLayOut","jsxDEV","_jsxDEV","ItemAll","_s","items","setItems","isLoading","setIsLoading","currentPage","setCurrentPage","fetchItems","page","cookResponse","etcResponse","matResponse","chairResponse","tentResponse","Promise","all","get","nextPageItems","data","prevItems","error","console","loadMoreItems","nextPage","topText","onLoadMore","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/item/ItemAll.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item } from \"../../types\";\nimport axios from \"axios\";\nimport ItemLayOut from \"./ItemLayOut\";\n\nconst ItemAll = () => {\n    const [items, setItems] = useState<Item[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1); // 현재 페이지 상태 추가\n\n    const fetchItems = async (page: number) => {\n        setIsLoading(true);\n\n        try {\n            const [cookResponse, etcResponse, matResponse, chairResponse, tentResponse] = await Promise.all([\n                axios.get(`/cook?page=${page}`),\n                axios.get(`/etc?page=${page}`),\n                axios.get(`/mat?page=${page}`),\n                axios.get(`/chair?page=${page}`),\n                axios.get(`/tent?page=${page}`)\n            ]);\n\n            const nextPageItems = [\n                ...cookResponse.data,\n                ...etcResponse.data,\n                ...matResponse.data,\n                ...chairResponse.data,\n                ...tentResponse.data\n            ];\n\n            setItems(prevItems => [...prevItems, ...nextPageItems]);\n        } catch (error) {\n            console.error('상품 가져오기 실패:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const loadMoreItems = () => {\n        const nextPage = currentPage + 1; // 다음 페이지 계산\n        fetchItems(nextPage);\n        setCurrentPage(nextPage); // 현재 페이지 업데이트\n    };\n\n    useEffect(() => {\n        fetchItems(1);\n    }, []);\n\n    return (\n        <ItemLayOut items={items} topText=\"전체상품\" onLoadMore={loadMoreItems} />\n    );\n};\n\n\nexport default ItemAll;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAGlD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAMa,UAAU,GAAG,MAAOC,IAAY,IAAK;IACvCJ,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACA,MAAM,CAACK,YAAY,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5FpB,KAAK,CAACqB,GAAG,CAAE,cAAaR,IAAK,EAAC,CAAC,EAC/Bb,KAAK,CAACqB,GAAG,CAAE,aAAYR,IAAK,EAAC,CAAC,EAC9Bb,KAAK,CAACqB,GAAG,CAAE,aAAYR,IAAK,EAAC,CAAC,EAC9Bb,KAAK,CAACqB,GAAG,CAAE,eAAcR,IAAK,EAAC,CAAC,EAChCb,KAAK,CAACqB,GAAG,CAAE,cAAaR,IAAK,EAAC,CAAC,CAClC,CAAC;MAEF,MAAMS,aAAa,GAAG,CAClB,GAAGR,YAAY,CAACS,IAAI,EACpB,GAAGR,WAAW,CAACQ,IAAI,EACnB,GAAGP,WAAW,CAACO,IAAI,EACnB,GAAGN,aAAa,CAACM,IAAI,EACrB,GAAGL,YAAY,CAACK,IAAI,CACvB;MAEDhB,QAAQ,CAACiB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGF,aAAa,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACNhB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGlB,WAAW,GAAG,CAAC,CAAC,CAAC;IAClCE,UAAU,CAACgB,QAAQ,CAAC;IACpBjB,cAAc,CAACiB,QAAQ,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED9B,SAAS,CAAC,MAAM;IACZc,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACF,UAAU;IAACK,KAAK,EAAEA,KAAM;IAACuB,OAAO,EAAC,0BAAM;IAACC,UAAU,EAAEH;EAAc;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE9E,CAAC;AAAC7B,EAAA,CA9CID,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}