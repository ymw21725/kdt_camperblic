{"ast":null,"code":"import*as React from'react';import{ResponsiveBar}from'@nivo/bar';import{jsx as _jsx}from\"react/jsx-runtime\";var Barchart=function Barchart(){var handle={barClick:function barClick(data){console.log(data);},legendClick:function legendClick(data){console.log(data);}};return/*#__PURE__*/ (// chart height이 100%이기 때문이 chart를 덮는 마크업 요소에 height 설정\n_jsx(\"section\",{style:{width:'800px',height:'500px',margin:'0 auto'},children:/*#__PURE__*/_jsx(ResponsiveBar/**\r\n                 * chart에 사용될 데이터\r\n                 */,{data:[{bottle:'전체',all:1000000},{bottle:'텐트/타프',tent:200000},{bottle:'테이블/체어',table:150000},{bottle:'침낭/매트',mat:330000},{bottle:'취사용품',cook:270000},{bottle:'소품',etc:50000}]/**\r\n                 * chart에 보여질 데이터 key (측정되는 값)\r\n                 */,keys:['all','tent','table','mat','cook','etc']/**\r\n                 * keys들을 그룹화하는 index key (분류하는 값)\r\n                 */,indexBy:\"bottle\"/**\r\n                 * chart margin\r\n                 */,margin:{top:50,right:130,bottom:50,left:100}/**\r\n                 * chart padding (bar간 간격)\r\n                 */,padding:0.3/**\r\n                 * chart 색상\r\n                 */,colors:['olive','brown','orange','aqua','cadetblue','wheat']// 커스터하여 사용할 때\n// colors={{ scheme: 'nivo' }} // nivo에서 제공해주는 색상 조합 사용할 때\n/**\r\n                 * color 적용 방식\r\n                 */,colorBy:\"id\"// 색상을 keys 요소들에 각각 적용\n// colorBy=\"indexValue\" // indexBy로 묵인 인덱스별로 각각 적용\n,theme:{/**\r\n                     * label style (bar에 표현되는 글씨)\r\n                     */labels:{text:{fontSize:14,fill:'#000000'}},/**\r\n                     * legend style (default로 우측 하단에 있는 색상별 key 표시)\r\n                     */legends:{text:{fontSize:12,fill:'#000000'}},axis:{/**\r\n                         * axis legend style (bottom, left에 있는 글씨)\r\n                         */legend:{text:{fontSize:20,fill:'#000000'}},/**\r\n                         * axis ticks style (bottom, left에 있는 값)\r\n                         */ticks:{text:{fontSize:16,fill:'#000000'}}}}/**\r\n                 * axis bottom 설정\r\n                 */,axisBottom:{tickSize:5,// 값 설명하기 위해 튀어나오는 점 크기\ntickPadding:5,// tick padding\ntickRotation:0,// tick 기울기\n// legend: '종류', // bottom 글씨\nlegendPosition:'middle',// 글씨 위치\nlegendOffset:40// 글씨와 chart간 간격\n}/**\r\n                 * axis left 설정\r\n                 */,axisLeft:{tickSize:5,// 값 설명하기 위해 튀어나오는 점 크기\ntickPadding:5,// tick padding\ntickRotation:0,// tick 기울기\nlegend:'매출액(원)',// left 글씨\nlegendPosition:'middle',// 글씨 위치\nlegendOffset:-90// 글씨와 chart간 간격\n}/**\r\n                 * label 안보이게 할 기준 width\r\n                 */,labelSkipWidth:36/**\r\n                 * label 안보이게 할 기준 height\r\n                 */,labelSkipHeight:12/**\r\n                 * bar 클릭 이벤트\r\n                 */,onClick:handle.barClick/**\r\n                 * legend 설정 (default로 우측 하단에 있는 색상별 key 표시)\r\n                 */,legends:[{dataFrom:'keys',// 보일 데이터 형태\nanchor:'bottom-right',// 위치\ndirection:'column',// item 그려지는 방향\njustify:false,// 글씨, 색상간 간격 justify 적용 여부\ntranslateX:120,// chart와 X 간격\ntranslateY:0,// chart와 Y 간격\nitemsSpacing:2,// item간 간격\nitemWidth:100,// item width\nitemHeight:20,// item height\nitemDirection:'left-to-right',// item 내부에 그려지는 방향\nitemOpacity:0.85,// item opacity\nsymbolSize:20,// symbol (색상 표기) 크기\neffects:[{// 추가 효과 설정 (hover하면 item opacity 1로 변경)\non:'hover',style:{itemOpacity:1}}],onClick:handle.legendClick// legend 클릭 이벤트\n}]})}));};export default Barchart;","map":{"version":3,"names":["React","ResponsiveBar","jsx","_jsx","Barchart","handle","barClick","data","console","log","legendClick","style","width","height","margin","children","bottle","all","tent","table","mat","cook","etc","keys","indexBy","top","right","bottom","left","padding","colors","colorBy","theme","labels","text","fontSize","fill","legends","axis","legend","ticks","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","onClick","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on"],"sources":["C:/Users/did40/Desktop/react_four/camperblic/src/main/frontend/src/pages/admin/components/Barchart.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\n\r\n\r\nconst Barchart = () => {\r\n    const handle = {\r\n        barClick: (data: any) => {\r\n            console.log(data);\r\n        },\r\n\r\n        legendClick: (data: any) => {\r\n            console.log(data);\r\n        },\r\n    };\r\n\r\n    return (\r\n        // chart height이 100%이기 때문이 chart를 덮는 마크업 요소에 height 설정\r\n        <section style={{ width: '800px', height: '500px', margin: '0 auto' }}>\r\n            <ResponsiveBar\r\n                /**\r\n                 * chart에 사용될 데이터\r\n                 */\r\n                data={[\r\n                    { bottle: '전체', all:1000000 },\r\n                    { bottle: '텐트/타프', tent:200000 },\r\n                    { bottle: '테이블/체어', table:150000 },\r\n                    { bottle: '침낭/매트', mat:330000 },\r\n                    { bottle: '취사용품', cook:270000 },\r\n                    { bottle: '소품', etc:50000 },\r\n                ]}\r\n                /**\r\n                 * chart에 보여질 데이터 key (측정되는 값)\r\n                 */\r\n                keys={['all', 'tent', 'table','mat', 'cook', 'etc']}\r\n                /**\r\n                 * keys들을 그룹화하는 index key (분류하는 값)\r\n                 */\r\n                indexBy=\"bottle\"\r\n                /**\r\n                 * chart margin\r\n                 */\r\n                margin={{ top: 50, right: 130, bottom: 50, left: 100 }}\r\n                /**\r\n                 * chart padding (bar간 간격)\r\n                 */\r\n                padding={0.3}\r\n                /**\r\n                 * chart 색상\r\n                 */\r\n                colors={['olive', 'brown', 'orange','aqua','cadetblue','wheat']} // 커스터하여 사용할 때\r\n                // colors={{ scheme: 'nivo' }} // nivo에서 제공해주는 색상 조합 사용할 때\r\n                /**\r\n                 * color 적용 방식\r\n                 */\r\n                colorBy=\"id\" // 색상을 keys 요소들에 각각 적용\r\n                // colorBy=\"indexValue\" // indexBy로 묵인 인덱스별로 각각 적용\r\n                theme={{\r\n                    /**\r\n                     * label style (bar에 표현되는 글씨)\r\n                     */\r\n                    labels: {\r\n                        text: {\r\n                            fontSize: 14,\r\n                            fill: '#000000',\r\n                        },\r\n                    },\r\n                    /**\r\n                     * legend style (default로 우측 하단에 있는 색상별 key 표시)\r\n                     */\r\n                    legends: {\r\n                        text: {\r\n                            fontSize: 12,\r\n                            fill: '#000000',\r\n                        },\r\n                    },\r\n                    axis: {\r\n                        /**\r\n                         * axis legend style (bottom, left에 있는 글씨)\r\n                         */\r\n                        legend: {\r\n                            text: {\r\n                                fontSize: 20,\r\n                                fill: '#000000',\r\n                            },\r\n                        },\r\n                        /**\r\n                         * axis ticks style (bottom, left에 있는 값)\r\n                         */\r\n                        ticks: {\r\n                            text: {\r\n                                fontSize: 16,\r\n                                fill: '#000000',\r\n                            },\r\n                        },\r\n                    },\r\n                }}\r\n                /**\r\n                 * axis bottom 설정\r\n                 */\r\n                axisBottom={{\r\n                    tickSize: 5, // 값 설명하기 위해 튀어나오는 점 크기\r\n                    tickPadding: 5, // tick padding\r\n                    tickRotation: 0, // tick 기울기\r\n                    // legend: '종류', // bottom 글씨\r\n                    legendPosition: 'middle', // 글씨 위치\r\n                    legendOffset: 40, // 글씨와 chart간 간격\r\n                }}\r\n                /**\r\n                 * axis left 설정\r\n                 */\r\n                axisLeft={{\r\n                    tickSize: 5, // 값 설명하기 위해 튀어나오는 점 크기\r\n                    tickPadding: 5, // tick padding\r\n                    tickRotation: 0, // tick 기울기\r\n                    legend: '매출액(원)', // left 글씨\r\n                    legendPosition: 'middle', // 글씨 위치\r\n                    legendOffset: -90, // 글씨와 chart간 간격\r\n                }}\r\n                /**\r\n                 * label 안보이게 할 기준 width\r\n                 */\r\n                labelSkipWidth={36}\r\n                /**\r\n                 * label 안보이게 할 기준 height\r\n                 */\r\n                labelSkipHeight={12}\r\n                /**\r\n                 * bar 클릭 이벤트\r\n                 */\r\n                onClick={handle.barClick}\r\n                /**\r\n                 * legend 설정 (default로 우측 하단에 있는 색상별 key 표시)\r\n                 */\r\n                legends={[\r\n                    {\r\n                        dataFrom: 'keys', // 보일 데이터 형태\r\n                        anchor: 'bottom-right', // 위치\r\n                        direction: 'column', // item 그려지는 방향\r\n                        justify: false, // 글씨, 색상간 간격 justify 적용 여부\r\n                        translateX: 120, // chart와 X 간격\r\n                        translateY: 0, // chart와 Y 간격\r\n                        itemsSpacing: 2, // item간 간격\r\n                        itemWidth: 100, // item width\r\n                        itemHeight: 20, // item height\r\n                        itemDirection: 'left-to-right', // item 내부에 그려지는 방향\r\n                        itemOpacity: 0.85, // item opacity\r\n                        symbolSize: 20, // symbol (색상 표기) 크기\r\n                        effects: [\r\n                            {\r\n                                // 추가 효과 설정 (hover하면 item opacity 1로 변경)\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1,\r\n                                },\r\n                            },\r\n                        ],\r\n                        onClick: handle.legendClick, // legend 클릭 이벤트\r\n                    },\r\n                ]}\r\n            />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Barchart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}