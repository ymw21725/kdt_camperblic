{"ast":null,"code":"import { jsx as t, jsxs as e } from \"react/jsx-runtime\";\nimport { scaleLinear as i } from \"d3-scale\";\nimport { getValueFormatter as n, useTheme as o, degreesToRadians as r } from \"@nivo/core\";\nimport { computeContinuousColorScaleColorStops as l } from \"@nivo/colors\";\nimport * as a from \"react\";\nimport { Fragment as c, useState as s, useCallback as d, useMemo as h } from \"react\";\nimport g from \"prop-types\";\nvar m = function m(e) {\n    var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n    return t(\"circle\", {\n      r: o / 2,\n      cx: i + o / 2,\n      cy: n + o / 2,\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      style: {\n        pointerEvents: \"none\"\n      }\n    });\n  },\n  f = function f(e) {\n    var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n    return t(\"g\", {\n      transform: \"translate(\" + i + \",\" + n + \")\",\n      children: t(\"path\", {\n        d: \"\\n                    M\" + o / 2 + \" 0\\n                    L\" + .8 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" \" + o + \"\\n                    L\" + .2 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" 0\\n                \",\n        fill: r,\n        opacity: a,\n        strokeWidth: s,\n        stroke: void 0 === d ? \"transparent\" : d,\n        style: {\n          pointerEvents: \"none\"\n        }\n      })\n    });\n  },\n  u = function u(e) {\n    var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n    return t(\"rect\", {\n      x: i,\n      y: n,\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      width: o,\n      height: o,\n      style: {\n        pointerEvents: \"none\"\n      }\n    });\n  },\n  v = function v(e) {\n    var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n    return t(\"g\", {\n      transform: \"translate(\" + i + \",\" + n + \")\",\n      children: t(\"path\", {\n        d: \"\\n                M\" + o / 2 + \" 0\\n                L\" + o + \" \" + o + \"\\n                L0 \" + o + \"\\n                L\" + o / 2 + \" 0\\n            \",\n        fill: r,\n        opacity: a,\n        strokeWidth: s,\n        stroke: void 0 === d ? \"transparent\" : d,\n        style: {\n          pointerEvents: \"none\"\n        }\n      })\n    });\n  };\nfunction p() {\n  return p = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n    return t;\n  }, p.apply(this, arguments);\n}\nvar y = {\n    length: 200,\n    thickness: 16,\n    direction: \"row\",\n    tickPosition: \"after\",\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: !1,\n    tickFormat: function tickFormat(t) {\n      return \"\" + t;\n    },\n    titleAlign: \"start\",\n    titleOffset: 4\n  },\n  b = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  k = function k(t) {\n    var e,\n      i = t.direction,\n      n = t.itemsSpacing,\n      o = t.padding,\n      r = t.itemCount,\n      l = t.itemWidth,\n      a = t.itemHeight;\n    if (\"number\" != typeof o && (\"object\" != typeof (e = o) || Array.isArray(e) || null === e)) throw new Error(\"Invalid property padding, must be one of: number, object\");\n    var c = \"number\" == typeof o ? {\n        top: o,\n        right: o,\n        bottom: o,\n        left: o\n      } : p({}, b, o),\n      s = c.left + c.right,\n      d = c.top + c.bottom,\n      h = l + s,\n      g = a + d,\n      m = (r - 1) * n;\n    return \"row\" === i ? h = l * r + m + s : \"column\" === i && (g = a * r + m + d), {\n      width: h,\n      height: g,\n      padding: c\n    };\n  },\n  x = function x(t) {\n    var e = t.anchor,\n      i = t.translateX,\n      n = t.translateY,\n      o = t.containerWidth,\n      r = t.containerHeight,\n      l = t.width,\n      a = t.height,\n      c = i,\n      s = n;\n    switch (e) {\n      case \"top\":\n        c += (o - l) / 2;\n        break;\n      case \"top-right\":\n        c += o - l;\n        break;\n      case \"right\":\n        c += o - l, s += (r - a) / 2;\n        break;\n      case \"bottom-right\":\n        c += o - l, s += r - a;\n        break;\n      case \"bottom\":\n        c += (o - l) / 2, s += r - a;\n        break;\n      case \"bottom-left\":\n        s += r - a;\n        break;\n      case \"left\":\n        s += (r - a) / 2;\n        break;\n      case \"center\":\n        c += (o - l) / 2, s += (r - a) / 2;\n    }\n    return {\n      x: c,\n      y: s\n    };\n  },\n  S = function S(t) {\n    var e,\n      i,\n      n,\n      o,\n      r,\n      l,\n      a = t.direction,\n      c = t.justify,\n      s = t.symbolSize,\n      d = t.symbolSpacing,\n      h = t.width,\n      g = t.height;\n    switch (a) {\n      case \"left-to-right\":\n        e = 0, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = h, r = \"end\") : (n = s + d, r = \"start\");\n        break;\n      case \"right-to-left\":\n        e = h - s, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = 0, r = \"start\") : (n = h - s - d, r = \"end\");\n        break;\n      case \"top-to-bottom\":\n        e = (h - s) / 2, i = 0, n = h / 2, r = \"middle\", c ? (o = g, l = \"alphabetic\") : (o = s + d, l = \"text-before-edge\");\n        break;\n      case \"bottom-to-top\":\n        e = (h - s) / 2, i = g - s, n = h / 2, r = \"middle\", c ? (o = 0, l = \"text-before-edge\") : (o = g - s - d, l = \"alphabetic\");\n    }\n    return {\n      symbolX: e,\n      symbolY: i,\n      labelX: n,\n      labelY: o,\n      labelAnchor: r,\n      labelAlignment: l\n    };\n  },\n  A = function A(t) {\n    var e,\n      o = t.scale,\n      r = t.ticks,\n      a = t.length,\n      c = void 0 === a ? y.length : a,\n      s = t.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = t.direction,\n      g = void 0 === h ? y.direction : h,\n      m = t.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = t.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      p = t.tickSpacing,\n      b = void 0 === p ? y.tickSpacing : p,\n      k = t.tickOverlap,\n      x = void 0 === k ? y.tickOverlap : k,\n      S = t.tickFormat,\n      A = void 0 === S ? y.tickFormat : S,\n      W = t.title,\n      O = t.titleAlign,\n      z = void 0 === O ? y.titleAlign : O,\n      C = t.titleOffset,\n      B = void 0 === C ? y.titleOffset : C,\n      w = \"column\" === g ? [].concat(o.domain()).reverse() : o.domain(),\n      X = i().domain(w);\n    2 === w.length ? X.range([0, c]) : 3 === w.length && X.range([0, c / 2, c]), e = \"thresholds\" in o ? [w[0]].concat(o.thresholds(), [w[1]]) : Array.isArray(r) ? r : o.ticks(r);\n    var Y,\n      H,\n      E,\n      j,\n      T,\n      L,\n      M = l(o, 32),\n      F = n(A),\n      P = [],\n      R = 0,\n      q = 0;\n    if (\"row\" === g) {\n      var V, D, G;\n      Y = c, H = d, q = 1;\n      var I;\n      T = 0, E = \"start\" === z ? 0 : \"middle\" === z ? c / 2 : c, \"before\" === f ? (V = -v, D = x ? d : 0, G = -v - b, I = \"alphabetic\", j = d + B, L = \"hanging\") : (V = x ? 0 : d, G = (D = d + v) + b, I = \"hanging\", j = -B, L = \"alphabetic\"), e.forEach(function (t) {\n        var e = X(t);\n        P.push({\n          x1: e,\n          y1: V,\n          x2: e,\n          y2: D,\n          text: F(t),\n          textX: e,\n          textY: G,\n          textHorizontalAlign: \"middle\",\n          textVerticalAlign: I\n        });\n      });\n    } else {\n      var N, _, J, K;\n      Y = d, H = c, R = 1;\n      T = -90, j = \"start\" === z ? c : \"middle\" === z ? c / 2 : 0, \"before\" === f ? (_ = x ? d : 0, J = (N = -v) - b, K = \"end\", E = d + B, L = \"hanging\") : (N = x ? 0 : d, J = (_ = d + v) + b, K = \"start\", E = -B, L = \"alphabetic\"), e.forEach(function (t) {\n        var e = X(t);\n        P.push({\n          x1: N,\n          y1: e,\n          x2: _,\n          y2: e,\n          text: F(t),\n          textX: J,\n          textY: e,\n          textHorizontalAlign: K,\n          textVerticalAlign: \"central\"\n        });\n      });\n    }\n    return {\n      width: Y,\n      height: H,\n      gradientX1: 0,\n      gradientY1: R,\n      gradientX2: q,\n      gradientY2: 0,\n      colorStops: M,\n      ticks: P,\n      titleText: W,\n      titleX: E,\n      titleY: j,\n      titleRotation: T,\n      titleHorizontalAlign: z,\n      titleVerticalAlign: L\n    };\n  },\n  W = function W(i) {\n    var n = i.scale,\n      r = i.ticks,\n      l = i.length,\n      a = void 0 === l ? y.length : l,\n      s = i.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = i.direction,\n      g = void 0 === h ? y.direction : h,\n      m = i.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = i.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      b = i.tickSpacing,\n      k = void 0 === b ? y.tickSpacing : b,\n      x = i.tickOverlap,\n      S = void 0 === x ? y.tickOverlap : x,\n      W = i.tickFormat,\n      O = void 0 === W ? y.tickFormat : W,\n      z = i.title,\n      C = i.titleAlign,\n      B = void 0 === C ? y.titleAlign : C,\n      w = i.titleOffset,\n      X = A({\n        scale: n,\n        ticks: r,\n        length: a,\n        thickness: d,\n        direction: g,\n        tickPosition: f,\n        tickSize: v,\n        tickSpacing: k,\n        tickOverlap: S,\n        tickFormat: O,\n        title: z,\n        titleAlign: B,\n        titleOffset: void 0 === w ? y.titleOffset : w\n      }),\n      Y = X.width,\n      H = X.height,\n      E = X.gradientX1,\n      j = X.gradientY1,\n      T = X.gradientX2,\n      L = X.gradientY2,\n      M = X.ticks,\n      F = X.colorStops,\n      P = X.titleText,\n      R = X.titleX,\n      q = X.titleY,\n      V = X.titleRotation,\n      D = X.titleVerticalAlign,\n      G = X.titleHorizontalAlign,\n      I = o(),\n      N = \"ContinuousColorsLegendSvgGradient.\" + g + \".\" + F.map(function (t) {\n        return t.offset;\n      }).join(\"_\");\n    return e(\"g\", {\n      children: [t(\"defs\", {\n        children: t(\"linearGradient\", {\n          id: N,\n          x1: E,\n          y1: j,\n          x2: T,\n          y2: L,\n          children: F.map(function (e) {\n            return t(\"stop\", p({}, e));\n          })\n        })\n      }), P && t(\"text\", {\n        transform: \"translate(\" + R + \", \" + q + \") rotate(\" + V + \")\",\n        textAnchor: G,\n        dominantBaseline: D,\n        style: I.legends.title.text,\n        children: P\n      }), t(\"rect\", {\n        width: Y,\n        height: H,\n        fill: \"url(#\" + N\n      }), M.map(function (i, n) {\n        return e(c, {\n          children: [t(\"line\", {\n            x1: i.x1,\n            y1: i.y1,\n            x2: i.x2,\n            y2: i.y2,\n            style: I.legends.ticks.line\n          }), t(\"text\", {\n            x: i.textX,\n            y: i.textY,\n            textAnchor: i.textHorizontalAlign,\n            dominantBaseline: i.textVerticalAlign,\n            style: I.legends.ticks.text,\n            children: i.text\n          })]\n        }, n);\n      })]\n    });\n  },\n  O = [\"containerWidth\", \"containerHeight\", \"anchor\", \"translateX\", \"translateY\", \"length\", \"thickness\", \"direction\"],\n  z = function z(e) {\n    var i,\n      n,\n      o = e.containerWidth,\n      r = e.containerHeight,\n      l = e.anchor,\n      a = e.translateX,\n      c = void 0 === a ? 0 : a,\n      s = e.translateY,\n      d = void 0 === s ? 0 : s,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      b = function (t, e) {\n        if (null == t) return {};\n        var i,\n          n,\n          o = {},\n          r = Object.keys(t);\n        for (n = 0; n < r.length; n++) i = r[n], e.indexOf(i) >= 0 || (o[i] = t[i]);\n        return o;\n      }(e, O);\n    \"row\" === v ? (i = g, n = f) : (i = f, n = g);\n    var k = x({\n        anchor: l,\n        translateX: c,\n        translateY: d,\n        containerWidth: o,\n        containerHeight: r,\n        width: i,\n        height: n\n      }),\n      S = k.x,\n      A = k.y;\n    return t(\"g\", {\n      transform: \"translate(\" + S + \", \" + A + \")\",\n      children: t(W, p({\n        length: g,\n        thickness: f,\n        direction: v\n      }, b))\n    });\n  },\n  C = {\n    circle: m,\n    diamond: f,\n    square: u,\n    triangle: v\n  },\n  B = function B(i) {\n    var n,\n      r,\n      l,\n      c,\n      h,\n      g,\n      m,\n      f,\n      u,\n      v,\n      y,\n      b = i.x,\n      k = i.y,\n      x = i.width,\n      A = i.height,\n      W = i.data,\n      O = i.direction,\n      z = void 0 === O ? \"left-to-right\" : O,\n      B = i.justify,\n      w = void 0 !== B && B,\n      X = i.textColor,\n      Y = i.background,\n      H = void 0 === Y ? \"transparent\" : Y,\n      E = i.opacity,\n      j = void 0 === E ? 1 : E,\n      T = i.symbolShape,\n      L = void 0 === T ? \"square\" : T,\n      M = i.symbolSize,\n      F = void 0 === M ? 16 : M,\n      P = i.symbolSpacing,\n      R = void 0 === P ? 8 : P,\n      q = i.symbolBorderWidth,\n      V = void 0 === q ? 0 : q,\n      D = i.symbolBorderColor,\n      G = void 0 === D ? \"transparent\" : D,\n      I = i.onClick,\n      N = i.onMouseEnter,\n      _ = i.onMouseLeave,\n      J = i.toggleSerie,\n      K = i.effects,\n      Q = s({}),\n      U = Q[0],\n      Z = Q[1],\n      $ = o(),\n      tt = d(function (t) {\n        if (K) {\n          var e = K.filter(function (t) {\n            return \"hover\" === t.on;\n          }).reduce(function (t, e) {\n            return p({}, t, e.style);\n          }, {});\n          Z(e);\n        }\n        null == N || N(W, t);\n      }, [N, W, K]),\n      et = d(function (t) {\n        if (K) {\n          var e = K.filter(function (t) {\n            return \"hover\" !== t.on;\n          }).reduce(function (t, e) {\n            return p({}, t, e.style);\n          }, {});\n          Z(e);\n        }\n        null == _ || _(W, t);\n      }, [_, W, K]),\n      it = S({\n        direction: z,\n        justify: w,\n        symbolSize: null != (n = U.symbolSize) ? n : F,\n        symbolSpacing: R,\n        width: x,\n        height: A\n      }),\n      nt = it.symbolX,\n      ot = it.symbolY,\n      rt = it.labelX,\n      lt = it.labelY,\n      at = it.labelAnchor,\n      ct = it.labelAlignment,\n      st = [I, N, _, J].some(function (t) {\n        return void 0 !== t;\n      }),\n      dt = \"function\" == typeof L ? L : C[L];\n    return e(\"g\", {\n      transform: \"translate(\" + b + \",\" + k + \")\",\n      style: {\n        opacity: null != (r = U.itemOpacity) ? r : j\n      },\n      children: [t(\"rect\", {\n        width: x,\n        height: A,\n        fill: null != (l = U.itemBackground) ? l : H,\n        style: {\n          cursor: st ? \"pointer\" : \"auto\"\n        },\n        onClick: function onClick(t) {\n          null == I || I(W, t), null == J || J(W.id);\n        },\n        onMouseEnter: tt,\n        onMouseLeave: et\n      }), a.createElement(dt, p({\n        id: W.id,\n        x: nt,\n        y: ot,\n        size: null != (c = U.symbolSize) ? c : F,\n        fill: null != (h = null != (g = W.fill) ? g : W.color) ? h : \"black\",\n        borderWidth: null != (m = U.symbolBorderWidth) ? m : V,\n        borderColor: null != (f = U.symbolBorderColor) ? f : G\n      }, W.hidden ? $.legends.hidden.symbol : void 0)), t(\"text\", {\n        textAnchor: at,\n        style: p({}, $.legends.text, {\n          fill: null != (u = null != (v = null != (y = U.itemTextColor) ? y : X) ? v : $.legends.text.fill) ? u : \"black\",\n          dominantBaseline: ct,\n          pointerEvents: \"none\",\n          userSelect: \"none\"\n        }, W.hidden ? $.legends.hidden.text : void 0),\n        x: rt,\n        y: lt,\n        children: W.label\n      })]\n    });\n  },\n  w = function w(e) {\n    var i = e.data,\n      n = e.x,\n      o = e.y,\n      r = e.direction,\n      l = e.padding,\n      a = void 0 === l ? 0 : l,\n      c = e.justify,\n      s = e.effects,\n      d = e.itemWidth,\n      h = e.itemHeight,\n      g = e.itemDirection,\n      m = void 0 === g ? \"left-to-right\" : g,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemTextColor,\n      p = e.itemBackground,\n      y = void 0 === p ? \"transparent\" : p,\n      b = e.itemOpacity,\n      x = void 0 === b ? 1 : b,\n      S = e.symbolShape,\n      A = e.symbolSize,\n      W = e.symbolSpacing,\n      O = e.symbolBorderWidth,\n      z = e.symbolBorderColor,\n      C = e.onClick,\n      w = e.onMouseEnter,\n      X = e.onMouseLeave,\n      Y = e.toggleSerie,\n      H = k({\n        itemCount: i.length,\n        itemWidth: d,\n        itemHeight: h,\n        itemsSpacing: u,\n        direction: r,\n        padding: a\n      }).padding,\n      E = \"row\" === r ? d + u : 0,\n      j = \"column\" === r ? h + u : 0;\n    return t(\"g\", {\n      transform: \"translate(\" + n + \",\" + o + \")\",\n      children: i.map(function (e, i) {\n        return t(B, {\n          data: e,\n          x: i * E + H.left,\n          y: i * j + H.top,\n          width: d,\n          height: h,\n          direction: m,\n          justify: c,\n          effects: s,\n          textColor: v,\n          background: y,\n          opacity: x,\n          symbolShape: S,\n          symbolSize: A,\n          symbolSpacing: W,\n          symbolBorderWidth: O,\n          symbolBorderColor: z,\n          onClick: C,\n          onMouseEnter: w,\n          onMouseLeave: X,\n          toggleSerie: Y\n        }, i);\n      })\n    });\n  },\n  X = function X(e) {\n    var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemWidth,\n      p = e.itemHeight,\n      y = e.itemDirection,\n      b = e.itemTextColor,\n      S = e.itemBackground,\n      A = e.itemOpacity,\n      W = e.symbolShape,\n      O = e.symbolSize,\n      z = e.symbolSpacing,\n      C = e.symbolBorderWidth,\n      B = e.symbolBorderColor,\n      X = e.onClick,\n      Y = e.onMouseEnter,\n      H = e.onMouseLeave,\n      E = e.toggleSerie,\n      j = e.effects,\n      T = k({\n        itemCount: i.length,\n        itemsSpacing: u,\n        itemWidth: v,\n        itemHeight: p,\n        direction: d,\n        padding: g\n      }),\n      L = T.width,\n      M = T.height,\n      F = x({\n        anchor: s,\n        translateX: l,\n        translateY: c,\n        containerWidth: n,\n        containerHeight: o,\n        width: L,\n        height: M\n      }),\n      P = F.x,\n      R = F.y;\n    return t(w, {\n      data: i,\n      x: P,\n      y: R,\n      direction: d,\n      padding: g,\n      justify: m,\n      effects: j,\n      itemsSpacing: u,\n      itemWidth: v,\n      itemHeight: p,\n      itemDirection: y,\n      itemTextColor: b,\n      itemBackground: S,\n      itemOpacity: A,\n      symbolShape: W,\n      symbolSize: O,\n      symbolSpacing: z,\n      symbolBorderWidth: C,\n      symbolBorderColor: B,\n      onClick: X,\n      onMouseEnter: Y,\n      onMouseLeave: H,\n      toggleSerie: \"boolean\" == typeof E ? void 0 : E\n    });\n  },\n  Y = {\n    start: \"left\",\n    middle: \"center\",\n    end: \"right\"\n  },\n  H = function H(t, e) {\n    var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = void 0 !== m && m,\n      u = e.itemsSpacing,\n      v = void 0 === u ? 0 : u,\n      p = e.itemWidth,\n      y = e.itemHeight,\n      b = e.itemDirection,\n      A = void 0 === b ? \"left-to-right\" : b,\n      W = e.itemTextColor,\n      O = e.symbolSize,\n      z = void 0 === O ? 16 : O,\n      C = e.symbolSpacing,\n      B = void 0 === C ? 8 : C,\n      w = e.theme,\n      X = k({\n        itemCount: i.length,\n        itemWidth: p,\n        itemHeight: y,\n        itemsSpacing: v,\n        direction: d,\n        padding: g\n      }),\n      H = X.width,\n      E = X.height,\n      j = X.padding,\n      T = x({\n        anchor: s,\n        translateX: l,\n        translateY: c,\n        containerWidth: n,\n        containerHeight: o,\n        width: H,\n        height: E\n      }),\n      L = T.x,\n      M = T.y,\n      F = \"row\" === d ? p + v : 0,\n      P = \"column\" === d ? y + v : 0;\n    t.save(), t.translate(L, M), t.font = w.legends.text.fontSize + \"px \" + (w.legends.text.fontFamily || \"sans-serif\"), i.forEach(function (e, i) {\n      var n,\n        o,\n        r = i * F + j.left,\n        l = i * P + j.top,\n        a = S({\n          direction: A,\n          justify: f,\n          symbolSize: z,\n          symbolSpacing: B,\n          width: p,\n          height: y\n        }),\n        c = a.symbolX,\n        s = a.symbolY,\n        d = a.labelX,\n        h = a.labelY,\n        g = a.labelAnchor,\n        m = a.labelAlignment;\n      t.fillStyle = null != (n = e.color) ? n : \"black\", t.fillRect(r + c, l + s, z, z), t.textAlign = Y[g], \"central\" === m && (t.textBaseline = \"middle\"), t.fillStyle = null != (o = null != W ? W : w.legends.text.fill) ? o : \"black\", t.fillText(String(e.label), r + d, l + h);\n    }), t.restore();\n  },\n  E = function E(t, e) {\n    var i = e.containerWidth,\n      n = e.containerHeight,\n      o = e.anchor,\n      l = e.translateX,\n      a = void 0 === l ? 0 : l,\n      c = e.translateY,\n      s = void 0 === c ? 0 : c,\n      d = e.scale,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      p = e.ticks,\n      b = e.tickPosition,\n      k = void 0 === b ? y.tickPosition : b,\n      S = e.tickSize,\n      W = void 0 === S ? y.tickSize : S,\n      O = e.tickSpacing,\n      z = void 0 === O ? y.tickSpacing : O,\n      C = e.tickOverlap,\n      B = void 0 === C ? y.tickOverlap : C,\n      w = e.tickFormat,\n      X = void 0 === w ? y.tickFormat : w,\n      Y = e.title,\n      H = e.titleAlign,\n      E = void 0 === H ? y.titleAlign : H,\n      j = e.titleOffset,\n      T = void 0 === j ? y.titleOffset : j,\n      L = e.theme,\n      M = A({\n        scale: d,\n        ticks: p,\n        length: g,\n        thickness: f,\n        direction: v,\n        tickPosition: k,\n        tickSize: W,\n        tickSpacing: z,\n        tickOverlap: B,\n        tickFormat: X,\n        title: Y,\n        titleAlign: E,\n        titleOffset: T\n      }),\n      F = M.width,\n      P = M.height,\n      R = M.gradientX1,\n      q = M.gradientY1,\n      V = M.gradientX2,\n      D = M.gradientY2,\n      G = M.colorStops,\n      I = M.ticks,\n      N = M.titleText,\n      _ = M.titleX,\n      J = M.titleY,\n      K = M.titleRotation,\n      Q = M.titleVerticalAlign,\n      U = M.titleHorizontalAlign,\n      Z = x({\n        anchor: o,\n        translateX: a,\n        translateY: s,\n        containerWidth: i,\n        containerHeight: n,\n        width: F,\n        height: P\n      }),\n      $ = Z.x,\n      tt = Z.y,\n      et = {\n        font: t.font,\n        textAlign: t.textAlign,\n        textBaseline: t.textBaseline\n      };\n    t.save(), t.translate($, tt);\n    var it = t.createLinearGradient(R * F, q * P, V * F, D * P);\n    G.forEach(function (t) {\n      it.addColorStop(t.offset, t.stopColor);\n    }), t.fillStyle = it, t.fillRect(0, 0, F, P), t.font = (L.legends.ticks.text.fontWeight ? L.legends.ticks.text.fontWeight + \" \" : \"\") + L.legends.ticks.text.fontSize + \"px \" + L.legends.ticks.text.fontFamily, I.forEach(function (e) {\n      var i;\n      (null != (i = L.legends.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(L.axis.ticks.line.strokeWidth), L.axis.ticks.line.stroke && (t.strokeStyle = L.axis.ticks.line.stroke), t.lineCap = \"square\", t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke()), L.legends.ticks.text.fill && (t.fillStyle = L.legends.ticks.text.fill), t.textAlign = \"middle\" === e.textHorizontalAlign ? \"center\" : e.textHorizontalAlign, t.textBaseline = \"central\" === e.textVerticalAlign ? \"middle\" : e.textVerticalAlign, t.fillText(e.text, e.textX, e.textY);\n    }), N && (t.save(), t.translate(_, J), t.rotate(r(K)), t.font = (L.legends.title.text.fontWeight ? L.legends.title.text.fontWeight + \" \" : \"\") + L.legends.title.text.fontSize + \"px \" + L.legends.title.text.fontFamily, L.legends.title.text.fill && (t.fillStyle = L.legends.title.text.fill), t.textAlign = \"middle\" === U ? \"center\" : U, t.textBaseline = Q, t.fillText(N, 0, 0), t.restore()), t.restore(), t.font = et.font, t.textAlign = et.textAlign, t.textBaseline = et.textBaseline;\n  },\n  j = function j(t) {\n    var e = t.scale,\n      i = t.domain,\n      n = t.reverse,\n      o = void 0 !== n && n,\n      r = t.valueFormat,\n      l = void 0 === r ? function (t) {\n        return t;\n      } : r,\n      a = t.separator,\n      c = void 0 === a ? \" - \" : a;\n    return h(function () {\n      var t = (null != i ? i : e.range()).map(function (t, i) {\n        var n = e.invertExtent(t),\n          o = n[0],\n          r = n[1];\n        return {\n          id: t,\n          index: i,\n          extent: [o, r],\n          label: \"\" + l(o) + c + l(r),\n          value: e(o),\n          color: t\n        };\n      });\n      return o && t.reverse(), t;\n    }, [i, e, o, c, l]);\n  },\n  T = {\n    data: g.arrayOf(g.object),\n    anchor: g.oneOf([\"top\", \"top-right\", \"right\", \"bottom-right\", \"bottom\", \"bottom-left\", \"left\", \"top-left\", \"center\"]).isRequired,\n    translateX: g.number,\n    translateY: g.number,\n    direction: g.oneOf([\"row\", \"column\"]).isRequired,\n    itemsSpacing: g.number,\n    itemWidth: g.number.isRequired,\n    itemHeight: g.number.isRequired,\n    itemDirection: g.oneOf([\"left-to-right\", \"right-to-left\", \"top-to-bottom\", \"bottom-to-top\"]),\n    itemTextColor: g.string,\n    itemBackground: g.string,\n    itemOpacity: g.number,\n    symbolShape: g.oneOfType([g.oneOf([\"circle\", \"diamond\", \"square\", \"triangle\"]), g.func]),\n    symbolSize: g.number,\n    symbolSpacing: g.number,\n    symbolBorderWidth: g.number,\n    symbolBorderColor: g.string,\n    onClick: g.func,\n    onMouseEnter: g.func,\n    onMouseLeave: g.func,\n    effects: g.arrayOf(g.shape({\n      on: g.oneOfType([g.oneOf([\"hover\"])]).isRequired,\n      style: g.shape({\n        itemTextColor: g.string,\n        itemBackground: g.string,\n        itemOpacity: g.number,\n        symbolSize: g.number,\n        symbolBorderWidth: g.number,\n        symbolBorderColor: g.string\n      }).isRequired\n    }))\n  };\nexport { z as AnchoredContinuousColorsLegendSvg, X as BoxLegendSvg, W as ContinuousColorsLegendSvg, T as LegendPropShape, w as LegendSvg, B as LegendSvgItem, m as SymbolCircle, f as SymbolDiamond, u as SymbolSquare, v as SymbolTriangle, A as computeContinuousColorsLegend, k as computeDimensions, S as computeItemLayout, x as computePositionFromAnchor, y as continuousColorsLegendDefaults, E as renderContinuousColorLegendToCanvas, H as renderLegendToCanvas, j as useQuantizeColorScaleLegendData };","map":{"version":3,"names":["m","e","i","x","n","y","o","size","r","fill","l","opacity","a","c","borderWidth","s","d","borderColor","t","cx","cy","strokeWidth","stroke","style","pointerEvents","f","transform","children","u","width","height","v","p","Object","assign","bind","arguments","length","prototype","hasOwnProperty","call","apply","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","tickFormat","titleAlign","titleOffset","b","top","right","bottom","left","k","itemsSpacing","padding","itemCount","itemWidth","itemHeight","Array","isArray","Error","h","g","anchor","translateX","translateY","containerWidth","containerHeight","S","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","A","scale","ticks","W","title","O","z","C","B","w","concat","domain","reverse","X","range","thresholds","Y","H","E","j","T","L","M","F","P","R","q","V","D","G","I","forEach","push","x1","y1","x2","y2","text","textX","textY","textHorizontalAlign","textVerticalAlign","N","_","J","K","gradientX1","gradientY1","gradientX2","gradientY2","colorStops","titleText","titleX","titleY","titleRotation","titleHorizontalAlign","titleVerticalAlign","map","offset","join","id","textAnchor","dominantBaseline","legends","line","keys","indexOf","circle","diamond","square","triangle","data","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","Q","U","Z","$","tt","filter","on","reduce","et","it","nt","ot","rt","lt","at","ct","st","some","dt","itemOpacity","itemBackground","cursor","createElement","color","hidden","symbol","itemTextColor","userSelect","label","itemDirection","start","middle","end","theme","save","translate","font","fontSize","fontFamily","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","createLinearGradient","addColorStop","stopColor","fontWeight","lineWidth","Number","axis","strokeStyle","lineCap","beginPath","moveTo","lineTo","rotate","valueFormat","separator","invertExtent","index","extent","value","arrayOf","object","oneOf","isRequired","number","string","oneOfType","func","shape","AnchoredContinuousColorsLegendSvg","BoxLegendSvg","ContinuousColorsLegendSvg","LegendPropShape","LegendSvg","LegendSvgItem","SymbolCircle","SymbolDiamond","SymbolSquare","SymbolTriangle","computeContinuousColorsLegend","computeDimensions","computeItemLayout","computePositionFromAnchor","continuousColorsLegendDefaults","renderContinuousColorLegendToCanvas","renderLegendToCanvas","useQuantizeColorScaleLegendData"],"sources":["C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolCircle.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolDiamond.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolSquare.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolTriangle.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\defaults.ts","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\compute.ts","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\ContinuousColorsLegendSvg.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\AnchoredContinuousColorsLegendSvg.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvgItem.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvg.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\svg\\BoxLegendSvg.tsx","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\canvas.ts","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\hooks.ts","C:\\Camperblic\\camperblic\\src\\main\\frontend\\node_modules\\@nivo\\legends\\src\\props.ts"],"sourcesContent":["import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}