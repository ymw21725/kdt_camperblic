{"ast":null,"code":"import { Axes as e, Grid as a, renderGridLinesToCanvas as i, renderAxesToCanvas as t } from \"@nivo/axes\";\nimport { useAnnotations as n, Annotation as r, useComputedAnnotations as l, renderAnnotationsToCanvas as o } from \"@nivo/annotations\";\nimport { jsx as d, Fragment as u, jsxs as c } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as s, renderLegendToCanvas as h } from \"@nivo/legends\";\nimport { useTheme as b, getPropertyAccessor as g, usePropertyAccessor as v, useValueFormatter as f, Container as m, useMotionConfig as p, useDimensions as x, bindDefs as y, CartesianMarkers as S, SvgWrapper as k, getRelativeCursor as L, isCursorInRect as w, ResponsiveWrapper as C } from \"@nivo/core\";\nimport { useMemo as V, createElement as W, useCallback as M, useState as B, Fragment as I, forwardRef as T, useRef as R, useEffect as H } from \"react\";\nimport { animated as P, to as E, useTransition as F } from \"@react-spring/web\";\nimport { useTooltip as X, BasicTooltip as Y } from \"@nivo/tooltip\";\nimport { useOrdinalColorScale as D, useInheritedColor as O } from \"@nivo/colors\";\nimport { computeScale as G } from \"@nivo/scales\";\nimport { stack as A, stackOffsetDiverging as j } from \"d3-shape\";\nimport { uniqBy as q } from \"lodash\";\nfunction z() {\n  return z = Object.assign ? Object.assign.bind() : function (e) {\n    for (var a = 1; a < arguments.length; a++) {\n      var i = arguments[a];\n      for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t]);\n    }\n    return e;\n  }, z.apply(this, arguments);\n}\nfunction K(e, a) {\n  if (null == e) return {};\n  var i,\n    t,\n    n = {},\n    r = Object.keys(e);\n  for (t = 0; t < r.length; t++) i = r[t], a.indexOf(i) >= 0 || (n[i] = e[i]);\n  return n;\n}\nvar N,\n  J = function J(e) {\n    var a = e.bars,\n      i = e.annotations,\n      t = n({\n        data: a,\n        annotations: i,\n        getPosition: function getPosition(e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function getDimensions(e) {\n          var a = e.height,\n            i = e.width;\n          return {\n            width: i,\n            height: a,\n            size: Math.max(i, a)\n          };\n        }\n      });\n    return d(u, {\n      children: t.map(function (e, a) {\n        return d(r, z({}, e), a);\n      })\n    });\n  },\n  Q = function Q(e) {\n    var a = e.width,\n      i = e.height,\n      t = e.legends,\n      n = e.toggleSerie;\n    return d(u, {\n      children: t.map(function (e, t) {\n        var r,\n          l = e[0],\n          o = e[1];\n        return d(s, z({}, l, {\n          containerWidth: a,\n          containerHeight: i,\n          data: null != (r = l.data) ? r : o,\n          toggleSerie: l.toggleSerie && \"keys\" === l.dataFrom ? n : void 0\n        }), t);\n      })\n    });\n  },\n  U = [\"data\"],\n  Z = function Z(e) {\n    var a,\n      i = e.bar,\n      t = i.data,\n      n = K(i, U),\n      r = e.style,\n      l = r.borderColor,\n      o = r.color,\n      u = r.height,\n      s = r.labelColor,\n      h = r.labelOpacity,\n      g = r.labelX,\n      v = r.labelY,\n      f = r.transform,\n      m = r.width,\n      p = e.borderRadius,\n      x = e.borderWidth,\n      y = e.label,\n      S = e.shouldRenderLabel,\n      k = e.isInteractive,\n      L = e.onClick,\n      w = e.onMouseEnter,\n      C = e.onMouseLeave,\n      B = e.tooltip,\n      I = e.isFocusable,\n      T = e.ariaLabel,\n      R = e.ariaLabelledBy,\n      H = e.ariaDescribedBy,\n      F = b(),\n      Y = X(),\n      D = Y.showTooltipFromEvent,\n      O = Y.showTooltipAt,\n      G = Y.hideTooltip,\n      A = V(function () {\n        return function () {\n          return W(B, z({}, n, t));\n        };\n      }, [B, n, t]),\n      j = M(function (e) {\n        null == L || L(z({\n          color: n.color\n        }, t), e);\n      }, [n, t, L]),\n      q = M(function (e) {\n        return D(A(), e);\n      }, [D, A]),\n      N = M(function (e) {\n        null == w || w(t, e), D(A(), e);\n      }, [t, w, D, A]),\n      J = M(function (e) {\n        null == C || C(t, e), G();\n      }, [t, G, C]),\n      Q = M(function () {\n        O(A(), [n.absX + n.width / 2, n.absY]);\n      }, [O, A, n]),\n      Z = M(function () {\n        G();\n      }, [G]);\n    return c(P.g, {\n      transform: f,\n      children: [d(P.rect, {\n        width: E(m, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: E(u, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: p,\n        ry: p,\n        fill: null != (a = t.fill) ? a : o,\n        strokeWidth: x,\n        stroke: l,\n        focusable: I,\n        tabIndex: I ? 0 : void 0,\n        \"aria-label\": T ? T(t) : void 0,\n        \"aria-labelledby\": R ? R(t) : void 0,\n        \"aria-describedby\": H ? H(t) : void 0,\n        onMouseEnter: k ? N : void 0,\n        onMouseMove: k ? q : void 0,\n        onMouseLeave: k ? J : void 0,\n        onClick: k ? j : void 0,\n        onFocus: k && I ? Q : void 0,\n        onBlur: k && I ? Z : void 0\n      }), S && d(P.text, {\n        x: g,\n        y: v,\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        fillOpacity: h,\n        style: z({}, F.labels.text, {\n          pointerEvents: \"none\",\n          fill: s\n        }),\n        children: y\n      })]\n    });\n  },\n  $ = [\"color\", \"label\"],\n  _ = function _(e) {\n    var a = e.color,\n      i = e.label,\n      t = K(e, $);\n    return d(Y, {\n      id: i,\n      value: t.formattedValue,\n      enableChip: !0,\n      color: a\n    });\n  },\n  ee = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    reverse: !1,\n    minValue: \"auto\",\n    maxValue: \"auto\",\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: !0\n    },\n    padding: .1,\n    innerPadding: 0,\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"theme\",\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: _,\n    tooltipLabel: function tooltipLabel(e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: []\n  },\n  ae = z({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"markers\", \"legends\", \"annotations\"],\n    barComponent: Z,\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  ie = z({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"legends\", \"annotations\"],\n    pixelRatio: \"undefined\" != typeof window && null != (N = window.devicePixelRatio) ? N : 1\n  }),\n  te = function te(e, a, i, t, n, r) {\n    return G(t, {\n      all: e.map(a),\n      min: 0,\n      max: 0\n    }, n, r).padding(i);\n  },\n  ne = function ne(e, a) {\n    return e.map(function (e) {\n      return z({}, a.reduce(function (e, a) {\n        return e[a] = null, e;\n      }, {}), e);\n    });\n  },\n  re = function re(e) {\n    return Object.keys(e).reduce(function (a, i) {\n      return e[i] && (a[i] = e[i]), a;\n    }, {});\n  },\n  le = function le(e) {\n    return [e, Number(e)];\n  },\n  oe = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  de = function de(e, a) {\n    return e > a;\n  },\n  ue = function ue(e, a) {\n    return e < a;\n  },\n  ce = function ce(e, a) {\n    return Array.from(\" \".repeat(a - e), function (a, i) {\n      return e + i;\n    });\n  },\n  se = function se(e) {\n    return de(e, 0) ? 0 : e;\n  },\n  he = function he(e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? ue : de,\n      f = n.map(re),\n      m = [];\n    return s.forEach(function (e, i) {\n      return ce(0, h.domain().length).forEach(function (u) {\n        var s,\n          p,\n          x,\n          y = le(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = o(n[u]),\n          w = (null != (s = h(L)) ? s : 0) + a * i + c * i,\n          C = v(p = k, 0) ? null != (x = b(p)) ? x : 0 : t,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? t - a : (null != (i = b(e)) ? i : 0) - t;\n          }(k, C),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: a,\n          height: V,\n          color: l(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  be = function be(e, a, i, t) {\n    var n = e.data,\n      r = e.formatValue,\n      l = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      b = e.yScale,\n      g = e.margin,\n      v = i ? ue : de,\n      f = n.map(re),\n      m = [];\n    return u.forEach(function (e, i) {\n      return ce(0, b.domain().length).forEach(function (u) {\n        var c,\n          p,\n          x,\n          y = le(n[u][e]),\n          S = y[0],\n          k = y[1],\n          L = l(n[u]),\n          w = v(p = k, 0) ? t : null != (x = h(p)) ? x : 0,\n          C = (null != (c = b(L)) ? c : 0) + a * i + s * i,\n          V = function (e, a) {\n            var i;\n            return v(e, 0) ? (null != (i = h(e)) ? i : 0) - t : t - a;\n          }(k, w),\n          W = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: r(k),\n            hidden: !1,\n            index: u,\n            indexValue: L,\n            data: f[u]\n          };\n        m.push({\n          key: e + \".\" + W.indexValue,\n          index: m.length,\n          data: W,\n          x: w,\n          y: C,\n          absX: g.left + w,\n          absY: g.top + C,\n          width: V,\n          height: a,\n          color: o(W),\n          label: d(W)\n        });\n      });\n    }), m;\n  },\n  ge = function ge(e) {\n    var a,\n      i,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      b = e.valueScale,\n      g = e.indexScale,\n      v = e.hiddenIds,\n      f = void 0 === v ? [] : v,\n      m = K(e, oe),\n      p = m.keys.filter(function (e) {\n        return !f.includes(e);\n      }),\n      x = ne(m.data, p),\n      y = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = y[0],\n      k = y[1],\n      L = y[2],\n      w = te(x, m.getIndex, c, g, L, k),\n      C = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, b),\n      V = \"auto\" === C.min ? se : function (e) {\n        return e;\n      },\n      W = x.reduce(function (e, a) {\n        return [].concat(e, p.map(function (e) {\n          return a[e];\n        }));\n      }, []).filter(Boolean),\n      M = V(Math.min.apply(Math, W)),\n      B = (i = Math.max.apply(Math, W), isFinite(i) ? i : 0),\n      I = G(C, {\n        all: W,\n        min: M,\n        max: B\n      }, \"x\" === S ? o : d, S),\n      T = \"vertical\" === t ? [w, I] : [I, w],\n      R = T[0],\n      H = T[1],\n      P = (w.bandwidth() - h * (p.length - 1)) / p.length,\n      E = [z({}, m, {\n        data: x,\n        keys: p,\n        innerPadding: h,\n        xScale: R,\n        yScale: H\n      }), P, C.reverse, null != (a = I(0)) ? a : 0];\n    return {\n      xScale: R,\n      yScale: H,\n      bars: P > 0 ? \"vertical\" === t ? he.apply(void 0, E) : be.apply(void 0, E) : []\n    };\n  },\n  ve = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  fe = function e(a) {\n    var i;\n    return a.some(Array.isArray) ? e((i = []).concat.apply(i, a)) : a;\n  },\n  me = function me(e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = u(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return c(e[i ? 0 : 1]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = c(e[i ? 1 : 0])) ? t : 0) - a;\n          }(f, p) - o,\n          y = le(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: re(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: m,\n          y: p,\n          absX: s.left + m,\n          absY: s.top + p,\n          width: a,\n          height: x,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  pe = function pe(e, a, i) {\n    var t = e.formatValue,\n      n = e.getColor,\n      r = e.getIndex,\n      l = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return c.domain().forEach(function (d, b) {\n        var g,\n          v,\n          f = e[b],\n          m = null != (g = c(r(f.data))) ? g : 0,\n          p = (null != (v = function (e) {\n            return u(e[i ? 1 : 0]);\n          }(f)) ? v : 0) + .5 * o,\n          x = function (e, a) {\n            var t;\n            return (null != (t = u(e[i ? 0 : 1])) ? t : 0) - a;\n          }(f, p) - o,\n          y = le(f.data[e.key]),\n          S = y[0],\n          k = y[1],\n          L = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: t(k),\n            hidden: !1,\n            index: b,\n            indexValue: d,\n            data: re(f.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: L,\n          x: p,\n          y: m,\n          absX: s.left + p,\n          absY: s.top + m,\n          width: x,\n          height: a,\n          color: n(L),\n          label: l(L)\n        });\n      });\n    }), h;\n  },\n  xe = function xe(e) {\n    var a,\n      i = e.data,\n      t = e.layout,\n      n = e.minValue,\n      r = e.maxValue,\n      l = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      b = e.hiddenIds,\n      g = void 0 === b ? [] : b,\n      v = K(e, ve),\n      f = v.keys.filter(function (e) {\n        return !g.includes(e);\n      }),\n      m = A().keys(f).offset(j)(ne(i, f)),\n      p = \"vertical\" === t ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      x = p[0],\n      y = p[1],\n      S = p[2],\n      k = te(i, v.getIndex, c, h, S, y),\n      L = z({\n        max: r,\n        min: n,\n        reverse: l\n      }, s),\n      w = (a = fe(m), \"log\" === s.type ? a.filter(function (e) {\n        return 0 !== e;\n      }) : a),\n      C = Math.min.apply(Math, w),\n      V = Math.max.apply(Math, w),\n      W = G(L, {\n        all: w,\n        min: C,\n        max: V\n      }, \"x\" === x ? o : d, x),\n      M = \"vertical\" === t ? [k, W] : [W, k],\n      B = M[0],\n      I = M[1],\n      T = v.innerPadding > 0 ? v.innerPadding : 0,\n      R = k.bandwidth(),\n      H = [z({}, v, {\n        innerPadding: T,\n        stackedData: m,\n        xScale: B,\n        yScale: I\n      }), R, L.reverse];\n    return {\n      xScale: B,\n      yScale: I,\n      bars: R > 0 ? \"vertical\" === t ? me.apply(void 0, H) : pe.apply(void 0, H) : []\n    };\n  },\n  ye = function ye(e) {\n    var a = e.bars,\n      i = e.direction,\n      t = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      l = e.legendLabel,\n      o = e.reverse,\n      d = g(null != l ? l : \"indexes\" === t ? \"indexValue\" : \"id\");\n    return \"indexes\" === t ? function (e, a, i) {\n      var t = q(e.map(function (e) {\n        var a, t;\n        return {\n          id: null != (a = e.data.indexValue) ? a : \"\",\n          label: i(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === a && t.reverse(), t;\n    }(a, r, d) : function (e, a, i, t, n, r) {\n      var l = q(e.map(function (e) {\n        var a;\n        return {\n          id: e.data.id,\n          label: r(e.data),\n          hidden: e.data.hidden,\n          color: null != (a = e.color) ? a : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === a && \"stacked\" === t && \"column\" === i && !0 !== n || \"horizontal\" === a && \"stacked\" === t && !0 === n) && l.reverse(), l;\n    }(a, r, i, n, o, d);\n  },\n  Se = function Se(e) {\n    var a = e.indexBy,\n      i = void 0 === a ? ee.indexBy : a,\n      t = e.keys,\n      n = void 0 === t ? ee.keys : t,\n      r = e.label,\n      l = void 0 === r ? ee.label : r,\n      o = e.tooltipLabel,\n      d = void 0 === o ? ee.tooltipLabel : o,\n      u = e.valueFormat,\n      c = e.colors,\n      s = void 0 === c ? ee.colors : c,\n      h = e.colorBy,\n      g = void 0 === h ? ee.colorBy : h,\n      m = e.borderColor,\n      p = void 0 === m ? ee.borderColor : m,\n      x = e.labelTextColor,\n      y = void 0 === x ? ee.labelTextColor : x,\n      S = e.groupMode,\n      k = void 0 === S ? ee.groupMode : S,\n      L = e.layout,\n      w = void 0 === L ? ee.layout : L,\n      C = e.reverse,\n      W = void 0 === C ? ee.reverse : C,\n      I = e.data,\n      T = e.minValue,\n      R = void 0 === T ? ee.minValue : T,\n      H = e.maxValue,\n      P = void 0 === H ? ee.maxValue : H,\n      E = e.margin,\n      F = e.width,\n      X = e.height,\n      Y = e.padding,\n      G = void 0 === Y ? ee.padding : Y,\n      A = e.innerPadding,\n      j = void 0 === A ? ee.innerPadding : A,\n      q = e.valueScale,\n      K = void 0 === q ? ee.valueScale : q,\n      N = e.indexScale,\n      J = void 0 === N ? ee.indexScale : N,\n      Q = e.initialHiddenIds,\n      U = void 0 === Q ? ee.initialHiddenIds : Q,\n      Z = e.enableLabel,\n      $ = void 0 === Z ? ee.enableLabel : Z,\n      _ = e.labelSkipWidth,\n      ae = void 0 === _ ? ee.labelSkipWidth : _,\n      ie = e.labelSkipHeight,\n      te = void 0 === ie ? ee.labelSkipHeight : ie,\n      ne = e.legends,\n      re = void 0 === ne ? ee.legends : ne,\n      le = e.legendLabel,\n      oe = B(null != U ? U : []),\n      de = oe[0],\n      ue = oe[1],\n      ce = M(function (e) {\n        ue(function (a) {\n          return a.indexOf(e) > -1 ? a.filter(function (a) {\n            return a !== e;\n          }) : [].concat(a, [e]);\n        });\n      }, []),\n      se = v(i),\n      he = v(l),\n      be = v(d),\n      ve = f(u),\n      fe = b(),\n      me = D(s, g),\n      pe = O(p, fe),\n      Se = O(y, fe),\n      ke = (\"grouped\" === k ? ge : xe)({\n        layout: w,\n        reverse: W,\n        data: I,\n        getIndex: se,\n        keys: n,\n        minValue: R,\n        maxValue: P,\n        width: F,\n        height: X,\n        getColor: me,\n        padding: G,\n        innerPadding: j,\n        valueScale: K,\n        indexScale: J,\n        hiddenIds: de,\n        formatValue: ve,\n        getTooltipLabel: be,\n        margin: E\n      }),\n      Le = ke.bars,\n      we = ke.xScale,\n      Ce = ke.yScale,\n      Ve = V(function () {\n        return Le.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, a) {\n          return z({}, e, {\n            index: a\n          });\n        });\n      }, [Le]),\n      We = M(function (e) {\n        var a = e.width,\n          i = e.height;\n        return !!$ && !(ae > 0 && a < ae) && !(te > 0 && i < te);\n      }, [$, ae, te]),\n      Me = V(function () {\n        return n.map(function (e) {\n          var a = Le.find(function (a) {\n            return a.data.id === e;\n          });\n          return z({}, a, {\n            data: z({\n              id: e\n            }, null == a ? void 0 : a.data, {\n              hidden: de.includes(e)\n            })\n          });\n        });\n      }, [de, n, Le]),\n      Be = V(function () {\n        return re.map(function (e) {\n          return [e, ye({\n            bars: \"keys\" === e.dataFrom ? Me : Le,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: k,\n            layout: w,\n            legendLabel: le,\n            reverse: W\n          })];\n        });\n      }, [re, Me, Le, k, w, le, W]);\n    return {\n      bars: Le,\n      barsWithValue: Ve,\n      xScale: we,\n      yScale: Ce,\n      getIndex: se,\n      getLabel: he,\n      getTooltipLabel: be,\n      formatValue: ve,\n      getColor: me,\n      getBorderColor: pe,\n      getLabelColor: Se,\n      shouldRenderBarLabel: We,\n      hiddenIds: de,\n      toggleSerie: ce,\n      legendsWithData: Be\n    };\n  },\n  ke = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Le = function Le(i) {\n    var t = i.data,\n      n = i.indexBy,\n      r = i.keys,\n      l = i.margin,\n      o = i.width,\n      u = i.height,\n      c = i.groupMode,\n      s = i.layout,\n      h = i.reverse,\n      b = i.minValue,\n      g = i.maxValue,\n      v = i.valueScale,\n      f = i.indexScale,\n      m = i.padding,\n      L = i.innerPadding,\n      w = i.axisTop,\n      C = i.axisRight,\n      M = i.axisBottom,\n      B = void 0 === M ? ae.axisBottom : M,\n      T = i.axisLeft,\n      R = void 0 === T ? ae.axisLeft : T,\n      H = i.enableGridX,\n      P = void 0 === H ? ae.enableGridX : H,\n      E = i.enableGridY,\n      X = void 0 === E ? ae.enableGridY : E,\n      Y = i.gridXValues,\n      D = i.gridYValues,\n      O = i.layers,\n      G = void 0 === O ? ae.layers : O,\n      A = i.barComponent,\n      j = void 0 === A ? ae.barComponent : A,\n      q = i.enableLabel,\n      K = void 0 === q ? ae.enableLabel : q,\n      N = i.label,\n      U = i.labelSkipWidth,\n      Z = void 0 === U ? ae.labelSkipWidth : U,\n      $ = i.labelSkipHeight,\n      _ = void 0 === $ ? ae.labelSkipHeight : $,\n      ee = i.labelTextColor,\n      ie = i.markers,\n      te = void 0 === ie ? ae.markers : ie,\n      ne = i.colorBy,\n      re = i.colors,\n      le = i.defs,\n      oe = void 0 === le ? ae.defs : le,\n      de = i.fill,\n      ue = void 0 === de ? ae.fill : de,\n      ce = i.borderRadius,\n      se = void 0 === ce ? ae.borderRadius : ce,\n      he = i.borderWidth,\n      be = void 0 === he ? ae.borderWidth : he,\n      ge = i.borderColor,\n      ve = i.annotations,\n      fe = void 0 === ve ? ae.annotations : ve,\n      me = i.legendLabel,\n      pe = i.tooltipLabel,\n      xe = i.valueFormat,\n      ye = i.isInteractive,\n      ke = void 0 === ye ? ae.isInteractive : ye,\n      Le = i.tooltip,\n      we = void 0 === Le ? ae.tooltip : Le,\n      Ce = i.onClick,\n      Ve = i.onMouseEnter,\n      We = i.onMouseLeave,\n      Me = i.legends,\n      Be = i.role,\n      Ie = void 0 === Be ? ae.role : Be,\n      Te = i.ariaLabel,\n      Re = i.ariaLabelledBy,\n      He = i.ariaDescribedBy,\n      Pe = i.isFocusable,\n      Ee = void 0 === Pe ? ae.isFocusable : Pe,\n      Fe = i.barAriaLabel,\n      Xe = i.barAriaLabelledBy,\n      Ye = i.barAriaDescribedBy,\n      De = i.initialHiddenIds,\n      Oe = p(),\n      Ge = Oe.animate,\n      Ae = Oe.config,\n      je = x(o, u, l),\n      qe = je.outerWidth,\n      ze = je.outerHeight,\n      Ke = je.margin,\n      Ne = je.innerWidth,\n      Je = je.innerHeight,\n      Qe = Se({\n        indexBy: n,\n        label: N,\n        tooltipLabel: pe,\n        valueFormat: xe,\n        colors: re,\n        colorBy: ne,\n        borderColor: ge,\n        labelTextColor: ee,\n        groupMode: c,\n        layout: s,\n        reverse: h,\n        data: t,\n        keys: r,\n        minValue: b,\n        maxValue: g,\n        margin: Ke,\n        width: Ne,\n        height: Je,\n        padding: m,\n        innerPadding: L,\n        valueScale: v,\n        indexScale: f,\n        enableLabel: K,\n        labelSkipWidth: Z,\n        labelSkipHeight: _,\n        legends: Me,\n        legendLabel: me,\n        initialHiddenIds: De\n      }),\n      Ue = Qe.bars,\n      Ze = Qe.barsWithValue,\n      $e = Qe.xScale,\n      _e = Qe.yScale,\n      ea = Qe.getLabel,\n      aa = Qe.getTooltipLabel,\n      ia = Qe.getBorderColor,\n      ta = Qe.getLabelColor,\n      na = Qe.shouldRenderBarLabel,\n      ra = Qe.toggleSerie,\n      la = Qe.legendsWithData,\n      oa = F(Ze, {\n        keys: function keys(e) {\n          return e.key;\n        },\n        from: function from(e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function enter(e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        update: function update(e) {\n          return {\n            borderColor: ia(e),\n            color: e.color,\n            height: e.height,\n            labelColor: ta(e),\n            labelOpacity: 1,\n            labelX: e.width / 2,\n            labelY: e.height / 2,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          };\n        },\n        leave: function leave(e) {\n          return z({\n            borderColor: ia(e),\n            color: e.color,\n            height: 0,\n            labelColor: ta(e),\n            labelOpacity: 0,\n            labelX: e.width / 2,\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === s ? {} : {\n            labelX: 0,\n            labelY: e.height / 2,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        config: Ae,\n        immediate: !Ge\n      }),\n      da = V(function () {\n        return {\n          borderRadius: se,\n          borderWidth: be,\n          enableLabel: K,\n          isInteractive: ke,\n          labelSkipWidth: Z,\n          labelSkipHeight: _,\n          onClick: Ce,\n          onMouseEnter: Ve,\n          onMouseLeave: We,\n          getTooltipLabel: aa,\n          tooltip: we,\n          isFocusable: Ee,\n          ariaLabel: Fe,\n          ariaLabelledBy: Xe,\n          ariaDescribedBy: Ye\n        };\n      }, [se, be, K, aa, ke, _, Z, Ce, Ve, We, we, Ee, Fe, Xe, Ye]),\n      ua = y(oe, Ue, ue, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      ca = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null\n      };\n    G.includes(\"annotations\") && (ca.annotations = d(J, {\n      bars: Ue,\n      annotations: fe\n    }, \"annotations\")), G.includes(\"axes\") && (ca.axes = d(e, {\n      xScale: $e,\n      yScale: _e,\n      width: Ne,\n      height: Je,\n      top: w,\n      right: C,\n      bottom: B,\n      left: R\n    }, \"axes\")), G.includes(\"bars\") && (ca.bars = d(I, {\n      children: oa(function (e, a) {\n        return W(j, z({}, da, {\n          bar: a,\n          style: e,\n          shouldRenderLabel: na(a),\n          label: ea(a.data)\n        }));\n      })\n    }, \"bars\")), G.includes(\"grid\") && (ca.grid = d(a, {\n      width: Ne,\n      height: Je,\n      xScale: P ? $e : null,\n      yScale: X ? _e : null,\n      xValues: Y,\n      yValues: D\n    }, \"grid\")), G.includes(\"legends\") && (ca.legends = d(Q, {\n      width: Ne,\n      height: Je,\n      legends: la,\n      toggleSerie: ra\n    }, \"legends\")), G.includes(\"markers\") && (ca.markers = d(S, {\n      markers: te,\n      width: Ne,\n      height: Je,\n      xScale: $e,\n      yScale: _e\n    }, \"markers\"));\n    var sa = V(function () {\n      return z({}, da, {\n        margin: Ke,\n        width: o,\n        height: u,\n        innerWidth: Ne,\n        innerHeight: Je,\n        bars: Ue,\n        legendData: la,\n        enableLabel: K,\n        xScale: $e,\n        yScale: _e,\n        tooltip: we,\n        getTooltipLabel: aa,\n        onClick: Ce,\n        onMouseEnter: Ve,\n        onMouseLeave: We\n      });\n    }, [da, Ke, o, u, Ne, Je, Ue, la, K, $e, _e, we, aa, Ce, Ve, We]);\n    return d(k, {\n      width: qe,\n      height: ze,\n      margin: Ke,\n      defs: ua,\n      role: Ie,\n      ariaLabel: Te,\n      ariaLabelledBy: Re,\n      ariaDescribedBy: He,\n      isFocusable: Ee,\n      children: G.map(function (e, a) {\n        var i;\n        return \"function\" == typeof e ? d(I, {\n          children: W(e, sa)\n        }, a) : null != (i = null == ca ? void 0 : ca[e]) ? i : null;\n      })\n    });\n  },\n  we = function we(e) {\n    var a = e.isInteractive,\n      i = void 0 === a ? ae.isInteractive : a,\n      t = e.animate,\n      n = void 0 === t ? ae.animate : t,\n      r = e.motionConfig,\n      l = void 0 === r ? ae.motionConfig : r,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = K(e, ke);\n    return d(m, {\n      animate: n,\n      isInteractive: i,\n      motionConfig: l,\n      renderWrapper: u,\n      theme: o,\n      children: d(Le, z({\n        isInteractive: i\n      }, c))\n    });\n  },\n  Ce = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Ve = function Ve(e, a, i, t) {\n    return e.find(function (e) {\n      return w(e.x + a.left, e.y + a.top, e.width, e.height, i, t);\n    });\n  },\n  We = function We(e) {\n    var a = e.data,\n      r = e.indexBy,\n      u = e.keys,\n      c = e.margin,\n      s = e.width,\n      g = e.height,\n      v = e.groupMode,\n      f = e.layout,\n      m = e.reverse,\n      p = e.minValue,\n      y = e.maxValue,\n      S = e.valueScale,\n      k = e.indexScale,\n      w = e.padding,\n      C = e.innerPadding,\n      B = e.axisTop,\n      I = e.axisRight,\n      T = e.axisBottom,\n      P = void 0 === T ? ie.axisBottom : T,\n      E = e.axisLeft,\n      F = void 0 === E ? ie.axisLeft : E,\n      Y = e.enableGridX,\n      D = void 0 === Y ? ie.enableGridX : Y,\n      O = e.enableGridY,\n      G = void 0 === O ? ie.enableGridY : O,\n      A = e.gridXValues,\n      j = e.gridYValues,\n      q = e.layers,\n      K = void 0 === q ? ie.layers : q,\n      N = e.renderBar,\n      J = void 0 === N ? function (e, a) {\n        var i = a.bar,\n          t = i.color,\n          n = i.height,\n          r = i.width,\n          l = i.x,\n          o = i.y,\n          d = a.borderColor,\n          u = a.borderRadius,\n          c = a.borderWidth,\n          s = a.label,\n          h = a.labelColor,\n          b = a.shouldRenderLabel;\n        if (e.fillStyle = t, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n          var g = Math.min(u, n);\n          e.moveTo(l + g, o), e.lineTo(l + r - g, o), e.quadraticCurveTo(l + r, o, l + r, o + g), e.lineTo(l + r, o + n - g), e.quadraticCurveTo(l + r, o + n, l + r - g, o + n), e.lineTo(l + g, o + n), e.quadraticCurveTo(l, o + n, l, o + n - g), e.lineTo(l, o + g), e.quadraticCurveTo(l, o, l + g, o), e.closePath();\n        } else e.rect(l, o, r, n);\n        e.fill(), c > 0 && e.stroke(), b && (e.textBaseline = \"middle\", e.textAlign = \"center\", e.fillStyle = h, e.fillText(s, l + r / 2, o + n / 2));\n      } : N,\n      Q = e.enableLabel,\n      U = void 0 === Q ? ie.enableLabel : Q,\n      Z = e.label,\n      $ = e.labelSkipWidth,\n      _ = void 0 === $ ? ie.labelSkipWidth : $,\n      ee = e.labelSkipHeight,\n      ae = void 0 === ee ? ie.labelSkipHeight : ee,\n      te = e.labelTextColor,\n      ne = e.colorBy,\n      re = e.colors,\n      le = e.borderRadius,\n      oe = void 0 === le ? ie.borderRadius : le,\n      de = e.borderWidth,\n      ue = void 0 === de ? ie.borderWidth : de,\n      ce = e.borderColor,\n      se = e.annotations,\n      he = void 0 === se ? ie.annotations : se,\n      be = e.legendLabel,\n      ge = e.tooltipLabel,\n      ve = e.valueFormat,\n      fe = e.isInteractive,\n      me = void 0 === fe ? ie.isInteractive : fe,\n      pe = e.tooltip,\n      xe = void 0 === pe ? ie.tooltip : pe,\n      ye = e.onClick,\n      ke = e.onMouseEnter,\n      Le = e.onMouseLeave,\n      we = e.legends,\n      Ce = e.pixelRatio,\n      We = void 0 === Ce ? ie.pixelRatio : Ce,\n      Me = e.canvasRef,\n      Be = R(null),\n      Ie = b(),\n      Te = x(s, g, c),\n      Re = Te.margin,\n      He = Te.innerWidth,\n      Pe = Te.innerHeight,\n      Ee = Te.outerWidth,\n      Fe = Te.outerHeight,\n      Xe = Se({\n        indexBy: r,\n        label: Z,\n        tooltipLabel: ge,\n        valueFormat: ve,\n        colors: re,\n        colorBy: ne,\n        borderColor: ce,\n        labelTextColor: te,\n        groupMode: v,\n        layout: f,\n        reverse: m,\n        data: a,\n        keys: u,\n        minValue: p,\n        maxValue: y,\n        margin: Re,\n        width: He,\n        height: Pe,\n        padding: w,\n        innerPadding: C,\n        valueScale: S,\n        indexScale: k,\n        enableLabel: U,\n        labelSkipWidth: _,\n        labelSkipHeight: ae,\n        legends: we,\n        legendLabel: be\n      }),\n      Ye = Xe.bars,\n      De = Xe.barsWithValue,\n      Oe = Xe.xScale,\n      Ge = Xe.yScale,\n      Ae = Xe.getLabel,\n      je = Xe.getTooltipLabel,\n      qe = Xe.getBorderColor,\n      ze = Xe.getLabelColor,\n      Ke = Xe.shouldRenderBarLabel,\n      Ne = Xe.legendsWithData,\n      Je = X(),\n      Qe = Je.showTooltipFromEvent,\n      Ue = Je.hideTooltip,\n      Ze = l({\n        annotations: n({\n          data: Ye,\n          annotations: he,\n          getPosition: function getPosition(e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function getDimensions(e) {\n            var a = e.width,\n              i = e.height;\n            return {\n              width: a,\n              height: i,\n              size: Math.max(a, i)\n            };\n          }\n        })\n      }),\n      $e = V(function () {\n        return {\n          borderRadius: oe,\n          borderWidth: ue,\n          isInteractive: me,\n          isFocusable: !1,\n          labelSkipWidth: _,\n          labelSkipHeight: ae,\n          margin: Re,\n          width: s,\n          height: g,\n          innerWidth: He,\n          innerHeight: Pe,\n          bars: Ye,\n          legendData: Ne,\n          enableLabel: U,\n          xScale: Oe,\n          yScale: Ge,\n          tooltip: xe,\n          getTooltipLabel: je,\n          onClick: ye,\n          onMouseEnter: ke,\n          onMouseLeave: Le\n        };\n      }, [oe, ue, me, _, ae, Re, s, g, He, Pe, Ye, Ne, U, Oe, Ge, xe, je, ye, ke, Le]);\n    H(function () {\n      var e,\n        a = null == (e = Be.current) ? void 0 : e.getContext(\"2d\");\n      Be.current && a && (Be.current.width = Ee * We, Be.current.height = Fe * We, a.scale(We, We), a.fillStyle = Ie.background, a.fillRect(0, 0, Ee, Fe), a.translate(Re.left, Re.top), K.forEach(function (e) {\n        \"grid\" === e ? \"number\" == typeof Ie.grid.line.strokeWidth && Ie.grid.line.strokeWidth > 0 && (a.lineWidth = Ie.grid.line.strokeWidth, a.strokeStyle = Ie.grid.line.stroke, D && i(a, {\n          width: s,\n          height: g,\n          scale: Oe,\n          axis: \"x\",\n          values: A\n        }), G && i(a, {\n          width: s,\n          height: g,\n          scale: Ge,\n          axis: \"y\",\n          values: j\n        })) : \"axes\" === e ? t(a, {\n          xScale: Oe,\n          yScale: Ge,\n          width: He,\n          height: Pe,\n          top: B,\n          right: I,\n          bottom: P,\n          left: F,\n          theme: Ie\n        }) : \"bars\" === e ? De.forEach(function (e) {\n          J(a, {\n            bar: e,\n            borderColor: qe(e),\n            borderRadius: oe,\n            borderWidth: ue,\n            label: Ae(e.data),\n            labelColor: ze(e),\n            shouldRenderLabel: Ke(e)\n          });\n        }) : \"legends\" === e ? Ne.forEach(function (e) {\n          var i = e[0],\n            t = e[1];\n          h(a, z({}, i, {\n            data: t,\n            containerWidth: He,\n            containerHeight: Pe,\n            theme: Ie\n          }));\n        }) : \"annotations\" === e ? o(a, {\n          annotations: Ze,\n          theme: Ie\n        }) : \"function\" == typeof e && e(a, $e);\n      }), a.save());\n    }, [P, F, I, B, De, oe, ue, Ze, D, G, qe, Ae, ze, A, j, v, g, Pe, He, $e, K, f, Ne, Re.left, Re.top, Fe, Ee, We, J, Oe, Ge, m, Ke, Ie, s]);\n    var _e = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          void 0 !== n ? (Qe(W(xe, z({}, n.data, {\n            color: n.color,\n            label: n.label,\n            value: Number(n.data.value)\n          })), e), \"mouseenter\" === e.type && (null == ke || ke(n.data, e))) : Ue();\n        }\n      }, [Ue, Re, ke, Ye, Qe, xe]),\n      ea = M(function (e) {\n        if (Ye && Be.current) {\n          Ue();\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          n && (null == Le || Le(n.data, e));\n        }\n      }, [Ue, Re, Le, Ye]),\n      aa = M(function (e) {\n        if (Ye && Be.current) {\n          var a = L(Be.current, e),\n            i = a[0],\n            t = a[1],\n            n = Ve(Ye, Re, i, t);\n          void 0 !== n && (null == ye || ye(z({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Re, ye, Ye]);\n    return d(\"canvas\", {\n      ref: function ref(e) {\n        Be.current = e, Me && \"current\" in Me && (Me.current = e);\n      },\n      width: Ee * We,\n      height: Fe * We,\n      style: {\n        width: Ee,\n        height: Fe,\n        cursor: me ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: me ? _e : void 0,\n      onMouseMove: me ? _e : void 0,\n      onMouseLeave: me ? ea : void 0,\n      onClick: me ? aa : void 0\n    });\n  },\n  Me = T(function (e, a) {\n    var i = e.isInteractive,\n      t = e.renderWrapper,\n      n = e.theme,\n      r = K(e, Ce);\n    return d(m, {\n      isInteractive: i,\n      renderWrapper: t,\n      theme: n,\n      animate: !1,\n      children: d(We, z({}, r, {\n        canvasRef: a\n      }))\n    });\n  }),\n  Be = function Be(e) {\n    return d(C, {\n      children: function children(a) {\n        var i = a.width,\n          t = a.height;\n        return d(we, z({\n          width: i,\n          height: t\n        }, e));\n      }\n    });\n  },\n  Ie = T(function (e, a) {\n    return d(C, {\n      children: function children(i) {\n        var t = i.width,\n          n = i.height;\n        return d(Me, z({\n          width: t,\n          height: n\n        }, e, {\n          ref: a\n        }));\n      }\n    });\n  });\nexport { we as Bar, Me as BarCanvas, Z as BarItem, _ as BarTooltip, Be as ResponsiveBar, Ie as ResponsiveBarCanvas, ie as canvasDefaultProps, ee as defaultProps, ae as svgDefaultProps };","map":{"version":3,"names":["N","J","e","a","bars","i","annotations","t","n","data","getPosition","x","width","y","height","getDimensions","size","Math","max","d","u","children","map","r","z","Q","legends","toggleSerie","l","o","s","containerWidth","containerHeight","dataFrom","U","Z","bar","K","style","borderColor","color","labelColor","h","labelOpacity","g","labelX","v","labelY","f","transform","m","p","borderRadius","borderWidth","label","S","shouldRenderLabel","k","isInteractive","L","onClick","w","onMouseEnter","C","onMouseLeave","B","tooltip","I","isFocusable","T","ariaLabel","R","ariaLabelledBy","H","ariaDescribedBy","F","b","Y","X","D","showTooltipFromEvent","O","showTooltipAt","G","hideTooltip","A","V","W","j","M","q","absX","absY","c","P","rect","E","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","textAnchor","dominantBaseline","fillOpacity","labels","pointerEvents","$","_","id","value","formattedValue","enableChip","ee","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelSkipWidth","labelSkipHeight","labelTextColor","from","theme","colorBy","colors","scheme","tooltipLabel","indexValue","initialHiddenIds","markers","ae","layers","barComponent","defs","animate","motionConfig","role","ie","pixelRatio","window","devicePixelRatio","te","all","min","ne","reduce","re","Object","le","Number","oe","de","ue","ce","Array","repeat","se","he","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","index","push","key","left","top","be","ge","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","ve","fe","some","isArray","me","stackedData","pe","xe","offset","ye","direction","legendLabel","Se","valueFormat","indexOf","ke","Le","we","Ce","Ve","We","Me","find","Be","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","axisTop","axisRight","gridXValues","gridYValues","Ie","Te","Re","He","Pe","Ee","Fe","barAriaLabel","Xe","barAriaLabelledBy","Ye","barAriaDescribedBy","De","Oe","Ge","Ae","config","je","qe","outerWidth","ze","outerHeight","Ke","Ne","innerWidth","Je","innerHeight","Qe","Ue","Ze","$e","_e","ea","aa","ia","ta","na","ra","la","oa","enter","update","leave","immediate","da","ua","dataKey","targetKey","ca","axes","grid","right","bottom","xValues","yValues","sa","legendData","renderWrapper","renderBar","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","save","ref","cursor","Bar","BarCanvas","BarItem","BarTooltip","ResponsiveBar","ResponsiveBarCanvas","canvasDefaultProps","defaultProps","svgDefaultProps"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/BarAnnotations.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/BarLegends.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/BarItem.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/BarTooltip.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/props.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/compute/common.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/compute/grouped.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/compute/stacked.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/compute/legends.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/hooks.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/Bar.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/BarCanvas.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/ResponsiveBar.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'markers', 'legends', 'annotations'],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'legends', 'annotations'],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: RawDatum[], keys: string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport { uniqBy } from 'lodash'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n    }\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport { BarAnnotations } from './BarAnnotations'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarLegends } from './BarLegends'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { svgDefaultProps } from './props'\nimport { useTransition } from '@react-spring/web'\nimport { useBar } from './hooks'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n\n    initialHiddenIds,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n    })\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            labelX: bar.width / 2,\n            labelY: bar.height / 2,\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            labelX: bar.width / 2,\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      labelX: 0,\n                      labelY: bar.height / 2,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = 'center'\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + width / 2, y + height / 2)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n        ]\n    )\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width,\n                            height,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: Omit<BarSvgProps<RawDatum>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: Omit<BarCanvasProps<RawDatum>, 'height' | 'width'>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}