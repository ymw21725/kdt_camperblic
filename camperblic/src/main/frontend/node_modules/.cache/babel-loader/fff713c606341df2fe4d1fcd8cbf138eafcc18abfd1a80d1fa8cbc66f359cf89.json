{"ast":null,"code":"import _objectSpread from\"/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import axios from\"axios\";import{Simulate}from\"react-dom/test-utils\";var error=Simulate.error;import{useNavigate}from\"react-router-dom\";import\"../../styles/loginStyles/FindPassword.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FindPassword=function FindPassword(){var history=useNavigate();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userIdData=_useState2[0],setUserIdData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),changePw=_useState4[0],setChangePw=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),flag=_useState6[0],setFlag=_useState6[1];var passwordRegex=/^(?!.*[<>])(?!.*\\badmin\\b)(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/;var _useState7=useState({userid:\"\",name:\"\",email:\"\",phone:\"\",address1:\"\",address2:\"\",address3:\"\",address4:\"\",createdDate:\"\"}),_useState8=_slicedToArray(_useState7,2),userDataPw=_useState8[0],setUserDataPw=_useState8[1];var validateForm=function validateForm(){if(!passwordRegex.test(changePw)){var _document$getElementB;alert(\"올바른 비밀번호 형식이 아닙니다.\\n\"+\"\\\"영문 대소문자,숫자,특수문자(@,$,! %,*,?,&) 하나이상 포함 8자 이상 20자 이하입니다.\\\"\");(_document$getElementB=document.getElementById(\"password\"))===null||_document$getElementB===void 0?void 0:_document$getElementB.focus();return false;}return true;};var handleChan=function handleChan(e){setUserIdData(e.target.value);};var handlePw=function handlePw(e){e.preventDefault();axios.get(\"/finduserid\",{params:{userIdData:userIdData}}).then(function(response){setUserDataPw(_objectSpread({},response.data));setFlag(1);}).catch(function(error){console.log(error);alert(\"아이디가 일치하지 않습니다.\");});};var handleChangePw=function handleChangePw(e){setChangePw(e.target.value);};var handleChangeForm=function handleChangeForm(e){e.preventDefault();if(!validateForm()){return;}axios.put(\"/changepw\",userDataPw,{params:{changePw:changePw}}).then(function(response){alert(response.data);}).catch(function(error){console.log(error.response.data);});};return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"findPwMainDiv\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"findPwDiv\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CAMPERBLIC.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePw,className:\"findPwFormDiv\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"findPwInputDiv\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"userid\",placeholder:\"아이디를 입력하세요\",onChange:handleChan})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"findPwChangeBtn\",children:\"\\uB2E4\\uC74C\"})]}),flag==1&&/*#__PURE__*/_jsxs(\"div\",{className:\"findPwChangeInputDiv\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"password\",placeholder:\"변경할 비밀번호를 입력해주세요.\",onChange:handleChangePw,id:\"password\"}),/*#__PURE__*/_jsx(\"button\",{className:\"findPwChangeBtn\",type:\"button\",onClick:handleChangeForm,children:\"\\uBCC0\\uACBD\\uD558\\uAE30\"})]})]})})});};export default FindPassword;","map":{"version":3,"names":["React","useState","axios","Simulate","error","useNavigate","jsx","_jsx","jsxs","_jsxs","FindPassword","history","_useState","_useState2","_slicedToArray","userIdData","setUserIdData","_useState3","_useState4","changePw","setChangePw","_useState5","_useState6","flag","setFlag","passwordRegex","_useState7","userid","name","email","phone","address1","address2","address3","address4","createdDate","_useState8","userDataPw","setUserDataPw","validateForm","test","_document$getElementB","alert","document","getElementById","focus","handleChan","e","target","value","handlePw","preventDefault","get","params","then","response","_objectSpread","data","catch","console","log","handleChangePw","handleChangeForm","put","children","className","onSubmit","htmlFor","type","id","placeholder","onChange","onClick"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/src/pages/login/FindPassword.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Simulate} from \"react-dom/test-utils\";\r\nimport error = Simulate.error;\r\nimport {Member} from \"../../types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport \"../../styles/loginStyles/FindPassword.css\"\r\nconst FindPassword = () => {\r\n    const history = useNavigate();\r\n    const [userIdData, setUserIdData] = useState(\"\");\r\n    const [changePw, setChangePw] = useState(\"\");\r\n    const [flag, setFlag] = useState(0);\r\n    const passwordRegex = /^(?!.*[<>])(?!.*\\badmin\\b)(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,20}$/;\r\n    const [userDataPw, setUserDataPw] = useState<Member>({\r\n        userid: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address1: \"\",\r\n        address2: \"\",\r\n        address3: \"\",\r\n        address4: \"\",\r\n        createdDate: \"\",\r\n    });\r\n\r\n    const validateForm = () => {\r\n        if (!passwordRegex.test(changePw)) {\r\n            alert(\"올바른 비밀번호 형식이 아닙니다.\\n\" +\r\n                \"\\\"영문 대소문자,숫자,특수문자(@,$,! %,*,?,&) 하나이상 포함 8자 이상 20자 이하입니다.\\\"\");\r\n            document.getElementById(\"password\")?.focus();\r\n            return false;\r\n        }\r\n         return true;\r\n    }\r\n\r\n    const handleChan = ((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserIdData(e.target.value);\r\n    });\r\n    const handlePw = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        axios.get(\"/finduserid\", {params: {userIdData: userIdData}})\r\n            .then((response) => {\r\n                setUserDataPw({...response.data});\r\n                setFlag(1);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(\"아이디가 일치하지 않습니다.\")\r\n            });\r\n    };\r\n    const handleChangePw = ((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setChangePw(e.target.value);\r\n    });\r\n\r\n    const handleChangeForm = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n        axios.put(\"/changepw\", userDataPw, {params: {changePw: changePw}})\r\n            .then((response) => {\r\n                alert(response.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response.data);\r\n\r\n            })\r\n    };\r\n\r\n\r\n    return (\r\n        <section>\r\n            <div className={\"findPwMainDiv\"}>\r\n                <div className={\"findPwDiv\"}>\r\n                    <h1>CAMPERBLIC.</h1>\r\n                    <form onSubmit={handlePw} className={\"findPwFormDiv\"}>\r\n                        <div className={\"findPwInputDiv\"}>\r\n                            <label htmlFor={\"name\"}>아이디</label>\r\n                            <input type={\"text\"} id={\"name\"} name={\"userid\"} placeholder={\"아이디를 입력하세요\"} onChange={handleChan}/>\r\n                        </div>\r\n                        <button type={\"submit\"} className={\"findPwChangeBtn\"}>다음</button>\r\n                    </form>\r\n                    {flag == 1 &&\r\n                      <div className={\"findPwChangeInputDiv\"}>\r\n                        <label htmlFor={\"password\"}>비밀번호 변경</label>\r\n                        <input type={\"text\"} name={\"password\"} placeholder={\"변경할 비밀번호를 입력해주세요.\"}\r\n                               onChange={handleChangePw} id={\"password\"}/>\r\n                        <button className={\"findPwChangeBtn\"} type={\"button\"} onClick={handleChangeForm}>변경하기</button>\r\n                      </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default FindPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}