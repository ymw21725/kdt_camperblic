{"ast":null,"code":"import * as t from \"react\";\nimport { memo as e, useMemo as i, createElement as n } from \"react\";\nimport { animated as r, useSpring as a, useTransition as o } from \"@react-spring/web\";\nimport { textPropsByEngine as l, useTheme as s, useMotionConfig as c, degreesToRadians as f } from \"@nivo/core\";\nimport { timeFormat as x } from \"d3-time-format\";\nimport { format as d } from \"d3-format\";\nimport { getScaleTicks as u, centerScale as m } from \"@nivo/scales\";\nimport { jsxs as y, jsx as g, Fragment as k } from \"react/jsx-runtime\";\nimport h from \"prop-types\";\nfunction v() {\n  return v = Object.assign ? Object.assign.bind() : function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n    return t;\n  }, v.apply(this, arguments);\n}\nvar p = function (t) {\n    var e,\n      i = t.axis,\n      n = t.scale,\n      r = t.ticksPosition,\n      a = t.tickValues,\n      o = t.tickSize,\n      s = t.tickPadding,\n      c = t.tickRotation,\n      f = t.engine,\n      x = void 0 === f ? \"svg\" : f,\n      d = u(n, a),\n      y = l[x],\n      g = \"bandwidth\" in n ? m(n) : n,\n      k = {\n        lineX: 0,\n        lineY: 0\n      },\n      h = {\n        textX: 0,\n        textY: 0\n      },\n      p = \"object\" == typeof document && \"rtl\" === document.dir,\n      b = y.align.center,\n      P = y.baseline.center;\n    return \"x\" === i ? (e = function (t) {\n      var e;\n      return {\n        x: null != (e = g(t)) ? e : 0,\n        y: 0\n      };\n    }, k.lineY = o * (\"after\" === r ? 1 : -1), h.textY = (o + s) * (\"after\" === r ? 1 : -1), P = \"after\" === r ? y.baseline.top : y.baseline.bottom, 0 === c ? b = y.align.center : \"after\" === r && c < 0 || \"before\" === r && c > 0 ? (b = y.align[p ? \"left\" : \"right\"], P = y.baseline.center) : (\"after\" === r && c > 0 || \"before\" === r && c < 0) && (b = y.align[p ? \"right\" : \"left\"], P = y.baseline.center)) : (e = function (t) {\n      var e;\n      return {\n        x: 0,\n        y: null != (e = g(t)) ? e : 0\n      };\n    }, k.lineX = o * (\"after\" === r ? 1 : -1), h.textX = (o + s) * (\"after\" === r ? 1 : -1), b = \"after\" === r ? y.align.left : y.align.right), {\n      ticks: d.map(function (t) {\n        return v({\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          value: t\n        }, e(t), k, h);\n      }),\n      textAlign: b,\n      textBaseline: P\n    };\n  },\n  b = function (t, e) {\n    if (void 0 === t || \"function\" == typeof t) return t;\n    if (\"time\" === e.type) {\n      var i = x(t);\n      return function (t) {\n        return i(t instanceof Date ? t : new Date(t));\n      };\n    }\n    return d(t);\n  },\n  P = function (t) {\n    var e,\n      i = t.width,\n      n = t.height,\n      r = t.scale,\n      a = t.axis,\n      o = t.values,\n      l = (e = o, Array.isArray(e) ? o : void 0) || u(r, o),\n      s = \"bandwidth\" in r ? m(r) : r,\n      c = \"x\" === a ? l.map(function (t) {\n        var e, i;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: null != (e = s(t)) ? e : 0,\n          x2: null != (i = s(t)) ? i : 0,\n          y1: 0,\n          y2: n\n        };\n      }) : l.map(function (t) {\n        var e, n;\n        return {\n          key: t instanceof Date ? \"\" + t.valueOf() : \"\" + t,\n          x1: 0,\n          x2: i,\n          y1: null != (e = s(t)) ? e : 0,\n          y2: null != (n = s(t)) ? n : 0\n        };\n      });\n    return c;\n  },\n  S = e(function (t) {\n    var e,\n      n = t.value,\n      a = t.format,\n      o = t.lineX,\n      l = t.lineY,\n      c = t.onClick,\n      f = t.textBaseline,\n      x = t.textAnchor,\n      d = t.animatedProps,\n      u = s(),\n      m = null != (e = null == a ? void 0 : a(n)) ? e : n,\n      k = i(function () {\n        var t = {\n          opacity: d.opacity\n        };\n        return c ? {\n          style: v({}, t, {\n            cursor: \"pointer\"\n          }),\n          onClick: function (t) {\n            return c(t, m);\n          }\n        } : {\n          style: t\n        };\n      }, [d.opacity, c, m]);\n    return y(r.g, v({\n      transform: d.transform\n    }, k, {\n      children: [g(\"line\", {\n        x1: 0,\n        x2: o,\n        y1: 0,\n        y2: l,\n        style: u.axis.ticks.line\n      }), g(r.text, {\n        dominantBaseline: f,\n        textAnchor: x,\n        transform: d.textTransform,\n        style: u.axis.ticks.text,\n        children: \"\" + m\n      })]\n    }));\n  }),\n  T = e(function (e) {\n    var n = e.axis,\n      l = e.scale,\n      f = e.x,\n      x = void 0 === f ? 0 : f,\n      d = e.y,\n      u = void 0 === d ? 0 : d,\n      m = e.length,\n      k = e.ticksPosition,\n      h = e.tickValues,\n      P = e.tickSize,\n      T = void 0 === P ? 5 : P,\n      O = e.tickPadding,\n      w = void 0 === O ? 5 : O,\n      A = e.tickRotation,\n      X = void 0 === A ? 0 : A,\n      Y = e.format,\n      W = e.renderTick,\n      B = void 0 === W ? S : W,\n      z = e.legend,\n      V = e.legendPosition,\n      C = void 0 === V ? \"end\" : V,\n      D = e.legendOffset,\n      R = void 0 === D ? 0 : D,\n      j = e.onClick,\n      E = e.ariaHidden,\n      q = s(),\n      F = i(function () {\n        return b(Y, l);\n      }, [Y, l]),\n      H = p({\n        axis: n,\n        scale: l,\n        ticksPosition: k,\n        tickValues: h,\n        tickSize: T,\n        tickPadding: w,\n        tickRotation: X\n      }),\n      N = H.ticks,\n      I = H.textAlign,\n      G = H.textBaseline,\n      J = null;\n    if (void 0 !== z) {\n      var K,\n        L = 0,\n        M = 0,\n        Q = 0;\n      \"y\" === n ? (Q = -90, L = R, \"start\" === C ? (K = \"start\", M = m) : \"middle\" === C ? (K = \"middle\", M = m / 2) : \"end\" === C && (K = \"end\")) : (M = R, \"start\" === C ? K = \"start\" : \"middle\" === C ? (K = \"middle\", L = m / 2) : \"end\" === C && (K = \"end\", L = m)), J = g(\"text\", {\n        transform: \"translate(\" + L + \", \" + M + \") rotate(\" + Q + \")\",\n        textAnchor: K,\n        style: v({\n          dominantBaseline: \"central\"\n        }, q.axis.legend.text),\n        children: z\n      });\n    }\n    var U = c(),\n      Z = U.animate,\n      $ = U.config,\n      _ = a({\n        transform: \"translate(\" + x + \",\" + u + \")\",\n        lineX2: \"x\" === n ? m : 0,\n        lineY2: \"x\" === n ? 0 : m,\n        config: $,\n        immediate: !Z\n      }),\n      tt = o(N, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: function (t) {\n          return {\n            opacity: 1,\n            transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n            textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n          };\n        },\n        from: function (t) {\n          return {\n            opacity: 0,\n            transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n            textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n          };\n        },\n        enter: function (t) {\n          return {\n            opacity: 1,\n            transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n            textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n          };\n        },\n        update: function (t) {\n          return {\n            opacity: 1,\n            transform: \"translate(\" + t.x + \",\" + t.y + \")\",\n            textTransform: \"translate(\" + t.textX + \",\" + t.textY + \") rotate(\" + X + \")\"\n          };\n        },\n        leave: {\n          opacity: 0\n        },\n        config: $,\n        immediate: !Z\n      });\n    return y(r.g, {\n      transform: _.transform,\n      \"aria-hidden\": E,\n      children: [tt(function (e, i, n, r) {\n        return t.createElement(B, v({\n          tickIndex: r,\n          format: F,\n          rotate: X,\n          textBaseline: G,\n          textAnchor: I,\n          animatedProps: e\n        }, i, j ? {\n          onClick: j\n        } : {}));\n      }), g(r.line, {\n        style: q.axis.domain.line,\n        x1: 0,\n        x2: _.lineX2,\n        y1: 0,\n        y2: _.lineY2\n      }), J]\n    });\n  }),\n  O = {\n    ticksPosition: h.oneOf([\"before\", \"after\"]),\n    tickValues: h.oneOfType([h.number, h.arrayOf(h.oneOfType([h.number, h.string, h.instanceOf(Date)])), h.string]),\n    tickSize: h.number,\n    tickPadding: h.number,\n    tickRotation: h.number,\n    format: h.oneOfType([h.func, h.string]),\n    renderTick: h.func,\n    legend: h.node,\n    legendPosition: h.oneOf([\"start\", \"middle\", \"end\"]),\n    legendOffset: h.number,\n    ariaHidden: h.bool\n  },\n  w = h.shape(O),\n  A = [\"top\", \"right\", \"bottom\", \"left\"],\n  X = e(function (t) {\n    var e = t.xScale,\n      i = t.yScale,\n      n = t.width,\n      r = t.height,\n      a = {\n        top: t.top,\n        right: t.right,\n        bottom: t.bottom,\n        left: t.left\n      };\n    return g(k, {\n      children: A.map(function (t) {\n        var o = a[t];\n        if (!o) return null;\n        var l = \"top\" === t || \"bottom\" === t;\n        return g(T, v({}, o, {\n          axis: l ? \"x\" : \"y\",\n          x: \"right\" === t ? n : 0,\n          y: \"bottom\" === t ? r : 0,\n          scale: l ? e : i,\n          length: l ? n : r,\n          ticksPosition: \"top\" === t || \"left\" === t ? \"before\" : \"after\"\n        }), t);\n      })\n    });\n  }),\n  Y = e(function (t) {\n    var e = t.animatedProps,\n      i = s();\n    return g(r.line, v({}, e, i.grid.line));\n  }),\n  W = e(function (t) {\n    var e = t.lines,\n      i = c(),\n      r = i.animate,\n      a = i.config,\n      l = o(e, {\n        keys: function (t) {\n          return t.key;\n        },\n        initial: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        from: function (t) {\n          return {\n            opacity: 0,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        enter: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        update: function (t) {\n          return {\n            opacity: 1,\n            x1: t.x1,\n            x2: t.x2,\n            y1: t.y1,\n            y2: t.y2\n          };\n        },\n        leave: {\n          opacity: 0\n        },\n        config: a,\n        immediate: !r\n      });\n    return g(\"g\", {\n      children: l(function (t, e) {\n        return n(Y, v({}, e, {\n          key: e.key,\n          animatedProps: t\n        }));\n      })\n    });\n  }),\n  B = e(function (t) {\n    var e = t.width,\n      n = t.height,\n      r = t.xScale,\n      a = t.yScale,\n      o = t.xValues,\n      l = t.yValues,\n      s = i(function () {\n        return !!r && P({\n          width: e,\n          height: n,\n          scale: r,\n          axis: \"x\",\n          values: o\n        });\n      }, [r, o, e, n]),\n      c = i(function () {\n        return !!a && P({\n          width: e,\n          height: n,\n          scale: a,\n          axis: \"y\",\n          values: l\n        });\n      }, [n, e, a, l]);\n    return y(k, {\n      children: [s && g(W, {\n        lines: s\n      }), c && g(W, {\n        lines: c\n      })]\n    });\n  }),\n  z = function (t, e) {\n    var i,\n      n = e.axis,\n      r = e.scale,\n      a = e.x,\n      o = void 0 === a ? 0 : a,\n      l = e.y,\n      s = void 0 === l ? 0 : l,\n      c = e.length,\n      x = e.ticksPosition,\n      d = e.tickValues,\n      u = e.tickSize,\n      m = void 0 === u ? 5 : u,\n      y = e.tickPadding,\n      g = void 0 === y ? 5 : y,\n      k = e.tickRotation,\n      h = void 0 === k ? 0 : k,\n      v = e.format,\n      b = e.legend,\n      P = e.legendPosition,\n      S = void 0 === P ? \"end\" : P,\n      T = e.legendOffset,\n      O = void 0 === T ? 0 : T,\n      w = e.theme,\n      A = p({\n        axis: n,\n        scale: r,\n        ticksPosition: x,\n        tickValues: d,\n        tickSize: m,\n        tickPadding: g,\n        tickRotation: h,\n        engine: \"canvas\"\n      }),\n      X = A.ticks,\n      Y = A.textAlign,\n      W = A.textBaseline;\n    t.save(), t.translate(o, s), t.textAlign = Y, t.textBaseline = W, t.font = (w.axis.ticks.text.fontWeight ? w.axis.ticks.text.fontWeight + \" \" : \"\") + w.axis.ticks.text.fontSize + \"px \" + w.axis.ticks.text.fontFamily, (null != (i = w.axis.domain.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(w.axis.domain.line.strokeWidth), t.lineCap = \"square\", w.axis.domain.line.stroke && (t.strokeStyle = w.axis.domain.line.stroke), t.beginPath(), t.moveTo(0, 0), t.lineTo(\"x\" === n ? c : 0, \"x\" === n ? 0 : c), t.stroke());\n    var B = \"function\" == typeof v ? v : function (t) {\n      return \"\" + t;\n    };\n    if (X.forEach(function (e) {\n      var i;\n      (null != (i = w.axis.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(w.axis.ticks.line.strokeWidth), t.lineCap = \"square\", w.axis.ticks.line.stroke && (t.strokeStyle = w.axis.ticks.line.stroke), t.beginPath(), t.moveTo(e.x, e.y), t.lineTo(e.x + e.lineX, e.y + e.lineY), t.stroke());\n      var n = B(e.value);\n      t.save(), t.translate(e.x + e.textX, e.y + e.textY), t.rotate(f(h)), w.axis.ticks.text.fill && (t.fillStyle = w.axis.ticks.text.fill), t.fillText(String(n), 0, 0), t.restore();\n    }), void 0 !== b) {\n      var z = 0,\n        V = 0,\n        C = 0,\n        D = \"center\";\n      \"y\" === n ? (C = -90, z = O, \"start\" === S ? (D = \"start\", V = c) : \"middle\" === S ? (D = \"center\", V = c / 2) : \"end\" === S && (D = \"end\")) : (V = O, \"start\" === S ? D = \"start\" : \"middle\" === S ? (D = \"center\", z = c / 2) : \"end\" === S && (D = \"end\", z = c)), t.translate(z, V), t.rotate(f(C)), t.font = (w.axis.legend.text.fontWeight ? w.axis.legend.text.fontWeight + \" \" : \"\") + w.axis.legend.text.fontSize + \"px \" + w.axis.legend.text.fontFamily, w.axis.legend.text.fill && (t.fillStyle = w.axis.legend.text.fill), t.textAlign = D, t.textBaseline = \"middle\", t.fillText(b, 0, 0);\n    }\n    t.restore();\n  },\n  V = function (t, e) {\n    var i = e.xScale,\n      n = e.yScale,\n      r = e.width,\n      a = e.height,\n      o = e.top,\n      l = e.right,\n      s = e.bottom,\n      c = e.left,\n      f = e.theme,\n      x = {\n        top: o,\n        right: l,\n        bottom: s,\n        left: c\n      };\n    A.forEach(function (e) {\n      var o = x[e];\n      if (!o) return null;\n      var l = \"top\" === e || \"bottom\" === e,\n        s = \"top\" === e || \"left\" === e ? \"before\" : \"after\",\n        c = l ? i : n,\n        d = b(o.format, c);\n      z(t, v({}, o, {\n        axis: l ? \"x\" : \"y\",\n        x: \"right\" === e ? r : 0,\n        y: \"bottom\" === e ? a : 0,\n        scale: c,\n        format: d,\n        length: l ? r : a,\n        ticksPosition: s,\n        theme: f\n      }));\n    });\n  },\n  C = function (t, e) {\n    var i = e.width,\n      n = e.height,\n      r = e.scale,\n      a = e.axis,\n      o = e.values;\n    P({\n      width: i,\n      height: n,\n      scale: r,\n      axis: a,\n      values: o\n    }).forEach(function (e) {\n      t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke();\n    });\n  };\nexport { X as Axes, T as Axis, S as AxisTick, B as Grid, Y as GridLine, W as GridLines, w as axisPropType, O as axisPropTypes, A as positions, V as renderAxesToCanvas, z as renderAxisToCanvas, C as renderGridLinesToCanvas };","map":{"version":3,"names":["p","computeCartesianTicks","t","e","i","axis","n","scale","r","ticksPosition","a","tickValues","o","tickSize","s","tickPadding","c","tickRotation","f","engine","x","d","u","y","l","g","m","k","lineX","lineY","h","textX","textY","document","dir","b","align","center","P","baseline","translate","top","bottom","left","right","ticks","map","v","key","Date","valueOf","value","textAlign","textBaseline","getFormatter","type","computeGridLines","width","height","values","Array","isArray","x1","x2","y1","y2","S","format","onClick","textAnchor","animatedProps","opacity","style","cursor","transform","children","line","text","dominantBaseline","textTransform","T","length","O","w","A","X","Y","W","renderTick","B","z","legend","V","legendPosition","C","D","legendOffset","R","j","E","ariaHidden","q","F","H","N","I","G","J","K","L","M","Q","U","Z","animate","$","config","_","lineX2","lineY2","immediate","tt","keys","initial","from","enter","update","leave","createElement","tickIndex","rotate","domain","oneOf","oneOfType","number","arrayOf","string","instanceOf","func","node","bool","shape","xScale","yScale","grid","lines","xValues","yValues","renderAxisToCanvas","theme","save","font","fontWeight","fontSize","fontFamily","strokeWidth","lineWidth","Number","lineCap","stroke","strokeStyle","beginPath","moveTo","lineTo","forEach","fill","fillStyle","fillText","String","restore","renderAxesToCanvas","renderGridLinesToCanvas","Axes","Axis","AxisTick","Grid","GridLine","GridLines","axisPropType","axisPropTypes","positions"],"sources":["/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/compute.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/AxisTick.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/Axis.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/props.ts","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/Axes.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/GridLine.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/GridLines.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/components/Grid.tsx","/Users/ethan/Documents/codream_final/camperblic/src/main/frontend/node_modules/@nivo/axes/src/canvas.ts"],"sourcesContent":["import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const ticks = values.map((value: Value) => ({\n        key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n        value,\n        ...translate(value),\n        ...line,\n        ...text,\n    }))\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={theme.axis.ticks.line} />\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={theme.axis.ticks.text}\n            >\n                {`${value}`}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n","import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { useSpring, useTransition, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisTick } from './AxisTick'\nimport { AxisProps } from '../types'\n\nconst Axis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <text\n                transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                textAnchor={textAnchor}\n                style={{\n                    dominantBaseline: 'central',\n                    ...theme.axis.legend.text,\n                }}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        from: tick => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        enter: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        update: tick => ({\n            opacity: 1,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nconst memoizedAxis = memo(Axis) as typeof Axis\n\nexport { memoizedAxis as Axis }\n","import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n","import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n","import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n","import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n","import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n","import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n    ctx.font = `${theme.axis.ticks.text.fontWeight ? `${theme.axis.ticks.text.fontWeight} ` : ''}${\n        theme.axis.ticks.text.fontSize\n    }px ${theme.axis.ticks.text.fontFamily}`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = theme.axis.ticks.text.fill\n        }\n\n        ctx.fillText(String(value), 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}